{"version":3,"sources":["supabase.js","contexts/Auth.js","components/Signup.js","components/Login.js","baseURL.js","services/campusService.js","components/HeaderComponent.js","services/studentService.js","components/CreateStudent.js","components/DeleteStudent.js","components/UpdateStudent.js","components/AltStudentSchedule.js","services/scheduleService.js","components/EmptySchedule.js","services/guardianService.js","components/CreateGuardian.js","services/spedQuestionService.js","components/CreateSpedQuestion.js","components/StudentComponent.js","components/HomeComponent.js","services/gradebookService.js","components/CreateGradebook.js","services/trackerService.js","services/spedResponseService.js","components/CreateTracker.js","components/StudentInfo.js","components/TeacherScheduleComponent.js","components/TeacherComponent.js","components/UpdateSchedule.js","components/ScheduleComponent.js","components/PrivateRoute.js","components/SpedResponses.js","components/UpdateSpedQuestion.js","components/SpedComponent.js","components/MainComponent.js","components/Dashboard.js","App.js","reportWebVitals.js","index.js"],"names":["supabase","createClient","process","AuthContext","React","createContext","AuthProvider","children","useState","user","setUser","loading","setLoading","useEffect","session","auth","listener","onAuthStateChange","event","a","data","unsubscribe","value","signUp","signIn","signOut","Provider","useAuth","useContext","Signup","emailRef","useRef","passwordRef","history","useHistory","e","preventDefault","email","current","password","error","alert","push","Container","onSubmit","htmlFor","id","type","ref","to","Login","baseURL","campusService","fetch","method","headers","response","json","Header","props","onChange","campusId","Number","target","campus","state","campuses","find","setState","console","log","toggleNav","bind","isNavOpen","all","then","this","Fragment","Jumbotron","fluid","className","data-text","Navbar","dark","sticky","expand","NavbarBrand","href","src","height","width","alt","NavbarToggler","onClick","Collapse","isOpen","navbar","Nav","NavItem","Col","sm","Input","map","name","Component","studentService","studentObject","body","JSON","stringify","studentID","StudentCreator","modal","firstName","document","getElementById","lastName","birthDate","grade","iep","funding","instructionmode","previousSchools","allergies","hearingLimitations","visionLimitations","mobilityLimitations","sensitivities","therapies","social","emotional","physical","math","reading","writing","interests","create","student","students","Button","color","Modal","toggle","ModalBody","Form","Row","FormGroup","Label","for","createStudent","DeleteStudent","outline","size","studentFirstName","studentLastName","deleteStudent","studentId","delete","StudentUpdater","medical_information","additional_information","update","defaultValue","studentGrade","check","studentIEP","studentCampus","studentMedInfo","studentAddInfo","studentFunding","studentInstructionMode","updateStudent","AltStudentSchedule","studentschedule","studentsched","schedBox","filter","sort","b","period","Table","teacher","style","fontSize","course","NavLink","link","scheduleService","scheduleObject","scheduleId","EmptyScheduleCreator","i","schedule","emptySchedule","guardianService","guardianObject","guardianID","GuardianCreator","phone","address","additional_info","guardian","guardians","createGuardian","spedQuestionService","spedQuestionObject","spedQuestionId","SpedQuestionCreator","date","question","category","spedQuestion","createSpedQuestion","Student","first","last","selected","Card","CardImg","profile_image","CardBody","md","Home","class","gradebookService","gradebookObject","gradebookId","GradebookCreator","teachers","courses","pointsEarned","pointsAvailable","assignmentDate","Date","now","gradebook","backgroundColor","textAlign","createGradebook","trackerService","trackerObject","spedResponseService","spedResponseObject","spedResponseId","TrackerCreator","spedQuestions","datas","attendance","lesson","comprehension","comprehensionAI","comprehensionComment","engagement","engagementAI","engagementComment","behavior","behaviorAI","behaviorComment","assessment","tracker","meet","success","opportunity","spedResponse","forEach","scheduleQuestion","createSpedResponse","speQ","subject","form","multiple","createTracker","createSpedResponseNinja","StudentInfo","CardTitle","TeacherSchedule","teacherschedule","teachersched","prevProps","teacherSchedBox","setSchedule","CardText","Teacher","teacherId","ScheduleUpdater","parseInt","callback","updateSchedule","Schedule","schedules","getSchedules","studenta","studentb","cstudent","schedulea","scheduleb","bordered","hover","PrivateRoute","component","rest","render","SpedResponse","speds","speda","spedb","sped","SpedQuestionUpdater","spedQuestionDate","spedQuestionQuestion","spedQuestionCategory","updateSpedQuestion","Sped","activeTab","tab","tabs","classnames","active","TabContent","TabPane","tabId","studentQ","Main","path","Dashboard","App","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"oSAEMA,EAAWC,YACfC,2CACAA,uJ,OCDIC,EAAcC,IAAMC,gBAEnB,SAASC,EAAT,GAAqC,IAAbC,EAAY,EAAZA,SAAY,EACfC,qBADe,mBAChCC,EADgC,KAC1BC,EAD0B,OAETF,oBAAS,GAFA,mBAEhCG,EAFgC,KAEvBC,EAFuB,KAIvCC,qBAAU,WAAO,IAAD,EAERC,EAAUd,EAASe,KAAKD,UAE9BJ,EAAO,iBAACI,QAAD,IAACA,OAAD,EAACA,EAASL,YAAV,QAAkB,MACzBG,GAAW,GALG,IAQAI,EAAahB,EAASe,KAAKE,kBAAd,uCACzB,WAAOC,EAAOJ,GAAd,eAAAK,EAAA,sDACET,EAAO,iBAACI,QAAD,IAACA,OAAD,EAACA,EAASL,YAAV,QAAkB,MACzBG,GAAW,GAFb,2CADyB,yDAAnBQ,KAOR,OAAO,WACG,OAARJ,QAAQ,IAARA,KAAUK,iBAEX,IAGH,IAAMC,EAAQ,CACZC,OAAQ,SAACH,GAAD,OAAUpB,EAASe,KAAKQ,OAAOH,IACvCI,OAAQ,SAACJ,GAAD,OAAUpB,EAASe,KAAKS,OAAOJ,IACvCK,QAAS,kBAAMzB,EAASe,KAAKU,WAC7BhB,QAGF,OACE,cAACN,EAAYuB,SAAb,CAAsBJ,MAAOA,EAA7B,UACIX,GAAWJ,IAKZ,SAASoB,IACd,OAAOC,qBAAWzB,GCxCf,SAAS0B,IACd,IAAMC,EAAWC,mBACXC,EAAcD,mBAGZR,EAAWI,IAAXJ,OAEFU,EAAUC,cAPO,4CASvB,WAA4BC,GAA5B,mBAAAhB,EAAA,6DACEgB,EAAEC,iBAGIC,EAAQP,EAASQ,QAAQhB,MACzBiB,EAAWP,EAAYM,QAAQhB,MALvC,SAQ0BC,EAAO,CAAEc,QAAOE,aAR1C,kBAQUC,MAGNC,MAAM,oBAGNR,EAAQS,KAAK,KAdjB,4CATuB,sBA2BvB,OACE,mCACA,eAACC,EAAA,EAAD,WACA,uBAAMC,SA9Be,4CA8BrB,UACI,uBAAOC,QAAQ,cAAf,mBACA,uBACA,uBAAOC,GAAG,cAAcC,KAAK,QAAQC,IAAKlB,IAC1C,uBACA,uBAAOe,QAAQ,iBAAf,sBACA,uBACA,uBAAOC,GAAG,iBAAiBC,KAAK,WAAWC,IAAKhB,IAEhD,uBAEA,wBAAQe,KAAK,SAAb,wBAGF,uBAEA,0DAC2B,cAAC,IAAD,CAAME,GAAG,SAAT,4BC/C1B,SAASC,IACd,IAAMpB,EAAWC,mBACXC,EAAcD,mBAGZP,EAAWG,IAAXH,OAEFS,EAAUC,cAPM,4CAStB,WAA4BC,GAA5B,mBAAAhB,EAAA,6DACEgB,EAAEC,iBAGIC,EAAQP,EAASQ,QAAQhB,MACzBiB,EAAWP,EAAYM,QAAQhB,MALvC,SAQ0BE,EAAO,CAAEa,QAAOE,aAR1C,kBAQUC,MAGNC,MAAM,oBAGNR,EAAQS,KAAK,KAdjB,4CATsB,sBA2BtB,OACE,mCACA,eAACC,EAAA,EAAD,WACE,uBAAMC,SA9BY,4CA8BlB,UACE,uBAAOC,QAAQ,cAAf,mBACA,uBACA,uBAAOC,GAAG,cAAcC,KAAK,QAAQC,IAAKlB,IAC1C,uBACA,uBAAOe,QAAQ,iBAAf,sBACA,uBACA,uBAAOC,GAAG,iBAAiBC,KAAK,WAAWC,IAAKhB,IAEhD,uBAEA,wBAAQe,KAAK,SAAb,sBAGF,4B,oFCjDOI,EAAU,wBCcVC,EAAgB,I,0HAXzB,4BAAAjC,EAAA,sEAC2BkC,MAAM,GAAD,OAAIF,EAAJ,aAAwB,CAChDG,OAAQ,MACRC,QAAS,CACP,eAAgB,sBAJ1B,cACUC,EADV,gBAOmBA,EAASC,OAP5B,mF,8DCwFWC,E,kDApFX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IA0BVC,SAAW,SAAAzB,GACP,IAAM0B,EAAWC,OAAO3B,EAAE4B,OAAOzC,OAC3B0C,EAAS,EAAKC,MAAMC,SAASC,MAAK,SAAAH,GAAM,OAAIA,EAAOlB,KAAOe,KAChE,EAAKO,SAAS,CAAEJ,WAChBK,QAAQC,IAAIN,GACZK,QAAQC,IAAInC,EAAE4B,OAAOzC,QA7BrB,EAAKiD,UAAY,EAAKA,UAAUC,KAAf,gBACjB,EAAKP,MAAQ,CACTQ,WAAW,EACXP,SAAU,GACVF,OAAQ,MAPG,E,qDAWnB,WAAqB,IAAD,OAChBZ,EAAcsB,MAAMC,MAAK,SAACT,GACtB,EAAKE,SAAS,CACVF,aAEJG,QAAQC,IAAI,EAAKL,MAAMC,e,uBAK/B,WACIU,KAAKR,SAAS,CACVK,WAAYG,KAAKX,MAAMQ,c,oBAY/B,WACI,OACI,eAAC,IAAMI,SAAP,WACI,cAACC,EAAA,EAAD,CAAWC,OAAK,EAAhB,SACI,qBAAKC,UAAU,YAAYlC,GAAG,MAA9B,SACI,qBAAKkC,UAAU,MAAMlC,GAAG,UAAxB,SACI,sBAAKkC,UAAU,MAAf,UACI,oBAAIA,UAAU,SAASC,YAAU,cAAjC,yBACA,8EAKhB,cAACC,EAAA,EAAD,CAAQC,MAAI,EAACC,OAAO,MAAMC,OAAO,KAAjC,SACI,sBAAKL,UAAU,YAAf,UACI,cAACM,EAAA,EAAD,CAAaN,UAAU,UAAUO,KAAK,IAAtC,SAA0C,qBAAKC,IAAI,2PAA2PC,OAAO,KAAKC,MAAM,KAAKC,IAAI,kBACzU,cAACC,EAAA,EAAD,CAAeC,QAASjB,KAAKL,YAC7B,cAACuB,EAAA,EAAD,CAAUC,OAAQnB,KAAKX,MAAMQ,UAAWuB,QAAM,EAA9C,SACI,eAACC,EAAA,EAAD,CAAKD,QAAM,EAAX,UACI,cAACE,EAAA,EAAD,UACI,cAAC,IAAD,CAASlB,UAAU,WAAW/B,GAAG,QAAjC,oBAEJ,cAACiD,EAAA,EAAD,UACI,cAAC,IAAD,CAASlB,UAAU,WAAW/B,GAAG,YAAjC,wBAEJ,cAACiD,EAAA,EAAD,UACI,cAAC,IAAD,CAASlB,UAAU,WAAW/B,GAAG,YAAjC,wBAEJ,cAACiD,EAAA,EAAD,UACI,cAAC,IAAD,CAASlB,UAAU,WAAW/B,GAAG,aAAjC,wBAEJ,cAACiD,EAAA,EAAD,UACI,cAAC,IAAD,CAASlB,UAAU,WAAW/B,GAAG,QAAjC,yBAIZ,cAACkD,EAAA,EAAD,CAAKC,GAAI,EAAT,SACI,eAACC,EAAA,EAAD,CAAOtD,KAAK,SAASD,GAAG,eAAec,SAAUgB,KAAKhB,SAAtD,UACI,2BACCgB,KAAKX,MAAMC,SAASoC,KAAI,SAACtC,GAAD,OAAY,wBAAQ1C,MAAO0C,EAAOlB,GAAtB,SAA2BkB,EAAOuC,2B,GA5ElFC,a,gFCwCRC,EAAiB,I,0HA1C1B,4BAAAtF,EAAA,sEAC2BkC,MAAM,GAAD,OAAIF,EAAJ,aAAwB,CAChDG,OAAQ,MACRC,QAAS,CACP,eAAgB,sBAJ1B,cACUC,EADV,gBAOmBA,EAASC,OAP5B,mF,iHASA,WAAciD,GAAd,eAAAvF,EAAA,sEAC2BkC,MAAM,GAAD,OAAIF,EAAJ,aAAwB,CAChDG,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBoD,KAAMC,KAAKC,UAAUH,KAN7B,cACUlD,EADV,gBAQiBA,EAASC,OAR1B,mF,kHAUA,WAAaiD,GAAb,eAAAvF,EAAA,6DACIkD,QAAQC,IAAIoC,GACNlD,EAAWH,MAAM,UAAGF,EAAH,cAAuBuD,EAAcI,UAAW,CACnExD,OAAQ,SACRC,QAAS,CACL,eAAgB,sBAL5B,kBAQWC,GARX,2C,kHAUA,WAAakD,GAAb,iBAAAvF,EAAA,sDACUqC,EAAWH,MAAM,UAAGF,EAAH,cAAuBuD,EAAcI,UAAW,CACnExD,OAAQ,MACRC,QAAS,CACT,eAAgB,oBAEpBoD,KAAMC,KAAKC,UAAUH,KAEftF,EAAOoC,EACba,QAAQC,IAAIlD,GAThB,2C,+DCfS2F,EAAb,kDACE,WAAYpD,GAAQ,IAAD,8BACjB,cAAMA,IACDM,MAAQ,CACX+C,OAAO,GAHQ,EADrB,wFAQE,qCAAA7F,EAAA,6DACQuF,EAAgB,CACpBO,UAAWC,SAASC,eAAe,oBAAoB7F,MACvD8F,SAAUF,SAASC,eAAe,mBAAmB7F,MACrD+F,UAAWH,SAASC,eAAe,aAAa7F,MAChDgG,MAAOJ,SAASC,eAAe,gBAAgB7F,MAC/C4C,SAAUgD,SAASC,eAAe,iBAAiB7F,MACnDiG,IAAKL,SAASC,eAAe,OAAO7F,MACpCkG,QAASN,SAASC,eAAe,kBAAkB7F,MACnDmG,gBAAiBP,SAASC,eAAe,0BAA0B7F,MACnEoG,gBAAiBR,SAASC,eAAe,mBAAmB7F,MAC5DqG,UAAWT,SAASC,eAAe,aAAa7F,MAChDsG,mBAAoBV,SAASC,eAAe,sBAAsB7F,MAClEuG,kBAAmBX,SAASC,eAAe,qBAAqB7F,MAChEwG,oBAAqBZ,SAASC,eAAe,uBAAuB7F,MACpEyG,cAAeb,SAASC,eAAe,iBAAiB7F,MACxD0G,UAAWd,SAASC,eAAe,aAAa7F,MAChD2G,OAAQf,SAASC,eAAe,UAAU7F,MAC1C4G,UAAWhB,SAASC,eAAe,aAAa7F,MAChD6G,SAAUjB,SAASC,eAAe,YAAY7F,MAC9C8G,KAAMlB,SAASC,eAAe,QAAQ7F,MACtC+G,QAASnB,SAASC,eAAe,WAAW7F,MAC5CgH,QAASpB,SAASC,eAAe,WAAW7F,MAC5CiH,UAAWrB,SAASC,eAAe,aAAa7F,OAvBpD,SAyBwBmF,EAAe+B,OAAO9B,GAzB9C,OAyBQ+B,EAzBR,OA0BEpF,MAAM,GAAD,OAAIF,EAAJ,cACJwB,MAAK,SAACnB,GAAD,OAAcA,EAASC,UAC5BkB,MAAK,SAACvD,GACL,EAAKgD,SAAS,CACZsE,SAAUtH,OAGdiD,QAAQC,IAAImE,GAjCd,2CARF,0EA4CE,WACE,OAAQ7D,KAAKX,MAAM+C,QA7CvB,oBAgDE,WAAU,IAAD,OACP,OACE,gCACE,cAAC2B,EAAA,EAAD,CAAQC,MAAM,OAAO/C,QAAS,kBAAM,EAAKzB,SAAS,CAAE4C,OAAO,KAA3D,yBAGA,cAAC6B,EAAA,EAAD,CAAO9C,OAAQnB,KAAKX,MAAM+C,MAAO8B,OAAQlE,KAAKkE,OAA9C,SACE,cAACC,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,WACE,eAACC,EAAA,EAAD,WACE,cAAC9C,EAAA,EAAD,UACE,eAAC+C,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAOC,IAAI,mBAAX,wBACA,cAAC/C,EAAA,EAAD,CACEtD,KAAK,OACLwD,KAAK,mBACLzD,GAAG,0BAIT,cAACqD,EAAA,EAAD,UACE,eAAC+C,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAOC,IAAI,kBAAX,uBACA,cAAC/C,EAAA,EAAD,CACEtD,KAAK,OACLwD,KAAK,kBACLzD,GAAG,yBAIT,cAACqD,EAAA,EAAD,UACE,eAAC+C,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAOC,IAAI,YAAX,2BACA,cAAC/C,EAAA,EAAD,CACEtD,KAAK,OACLwD,KAAK,YACLzD,GAAG,sBAKX,eAACmG,EAAA,EAAD,WACE,cAAC9C,EAAA,EAAD,UACE,eAAC+C,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAOC,IAAI,eAAX,yBACA,eAAC/C,EAAA,EAAD,CAAOtD,KAAK,SAASwD,KAAK,eAAezD,GAAG,eAA5C,UACE,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,wCACA,wCACA,gDAIN,cAACqD,EAAA,EAAD,UACE,eAAC+C,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAOC,IAAI,MAAX,iBACA,eAAC/C,EAAA,EAAD,CAAOtD,KAAK,SAASwD,KAAK,MAAMzD,GAAG,MAAnC,UACE,2BACA,wBAAQxB,MAAM,OAAd,iBACA,wBAAQA,MAAM,QAAd,wBAIN,cAAC6E,EAAA,EAAD,UACE,eAAC+C,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAOC,IAAI,gBAAX,4BACA,eAAC/C,EAAA,EAAD,CAAOtD,KAAK,SAASwD,KAAK,gBAAgBzD,GAAG,gBAA7C,UACE,2BACA,wBAAQxB,MAAM,IAAd,mBACA,wBAAQA,MAAM,IAAd,yBACA,wBAAQA,MAAM,IAAd,6BACA,wBAAQA,MAAM,IAAd,wBACA,wBAAQA,MAAM,IAAd,+BAKR,eAAC2H,EAAA,EAAD,WACE,cAAC9C,EAAA,EAAD,UACE,eAAC+C,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAOC,IAAI,iBAAX,4BACA,eAAC/C,EAAA,EAAD,CAAOtD,KAAK,SAASwD,KAAK,iBAAiBzD,GAAG,iBAA9C,UACE,2BACA,wBAAQxB,MAAM,IAAd,iBACA,wBAAQA,MAAM,IAAd,sBACA,wBAAQA,MAAM,IAAd,yBACA,wBAAQA,MAAM,IAAd,iCAIN,cAAC6E,EAAA,EAAD,UACE,eAAC+C,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAOC,IAAI,yBAAX,8BACA,eAAC/C,EAAA,EAAD,CAAOtD,KAAK,SAASwD,KAAK,yBAAyBzD,GAAG,yBAAtD,UACE,2BACA,wBAAQxB,MAAM,IAAd,oBACA,wBAAQA,MAAM,IAAd,kBACA,wBAAQA,MAAM,IAAd,qBACA,wBAAQA,MAAM,IAAd,yBACA,wBAAQA,MAAM,IAAd,4BACA,wBAAQA,MAAM,IAAd,qCAKR,cAAC2H,EAAA,EAAD,UACE,cAAC9C,EAAA,EAAD,UACE,eAAC+C,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAOC,IAAI,kBAAX,gCACA,cAAC/C,EAAA,EAAD,CACEtD,KAAK,OACLwD,KAAK,kBACLzD,GAAG,2BAKX,eAACH,EAAA,EAAD,WACE,cAACsG,EAAA,EAAD,UACE,cAAC9C,EAAA,EAAD,UACE,6CAGJ,eAAC8C,EAAA,EAAD,WACE,cAAC9C,EAAA,EAAD,UACE,eAAC+C,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAOC,IAAI,qBAAX,qBACA,cAAC/C,EAAA,EAAD,CACEtD,KAAK,OACLwD,KAAK,qBACLzD,GAAG,4BAIT,cAACqD,EAAA,EAAD,UACE,eAAC+C,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAOC,IAAI,oBAAX,oBACA,cAAC/C,EAAA,EAAD,CACEtD,KAAK,OACLwD,KAAK,oBACLzD,GAAG,2BAIT,cAACqD,EAAA,EAAD,UACE,eAAC+C,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAOC,IAAI,sBAAX,sBACA,cAAC/C,EAAA,EAAD,CACEtD,KAAK,OACLwD,KAAK,sBACLzD,GAAG,mCAMb,eAACmG,EAAA,EAAD,WACE,cAAC9C,EAAA,EAAD,UACE,eAAC+C,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAOC,IAAI,YAAX,uBACA,cAAC/C,EAAA,EAAD,CACEtD,KAAK,OACLwD,KAAK,YACLzD,GAAG,mBAIT,cAACqD,EAAA,EAAD,UACE,eAAC+C,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAOC,IAAI,YAAX,uBACA,cAAC/C,EAAA,EAAD,CACEtD,KAAK,OACLwD,KAAK,YACLzD,GAAG,mBAIT,cAACqD,EAAA,EAAD,UACE,eAAC+C,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAOC,IAAI,gBAAX,2BACA,cAAC/C,EAAA,EAAD,CACEtD,KAAK,OACLwD,KAAK,gBACLzD,GAAG,0BAKX,eAACH,EAAA,EAAD,WACE,cAACsG,EAAA,EAAD,UACE,cAAC9C,EAAA,EAAD,UACE,mFAGJ,cAAC8C,EAAA,EAAD,UACE,cAAC9C,EAAA,EAAD,UACE,eAAC+C,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAOC,IAAI,SAAX,oBACA,cAAC/C,EAAA,EAAD,CACEtD,KAAK,OACLwD,KAAK,SACLzD,GAAG,kBAKX,cAACmG,EAAA,EAAD,UACE,cAAC9C,EAAA,EAAD,UACE,eAAC+C,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAOC,IAAI,YAAX,uBACA,cAAC/C,EAAA,EAAD,CACEtD,KAAK,OACLwD,KAAK,YACLzD,GAAG,qBAKX,cAACmG,EAAA,EAAD,UACE,cAAC9C,EAAA,EAAD,UACE,eAAC+C,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAOC,IAAI,WAAX,sBACA,cAAC/C,EAAA,EAAD,CACEtD,KAAK,OACLwD,KAAK,WACLzD,GAAG,oBAKX,cAACmG,EAAA,EAAD,UACE,cAAC9C,EAAA,EAAD,UACE,eAAC+C,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAOC,IAAI,OAAX,kBACA,cAAC/C,EAAA,EAAD,CACEtD,KAAK,OACLwD,KAAK,OACLzD,GAAG,gBAKX,cAACmG,EAAA,EAAD,UACE,cAAC9C,EAAA,EAAD,UACE,eAAC+C,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAOC,IAAI,UAAX,qBACA,cAAC/C,EAAA,EAAD,CACEtD,KAAK,OACLwD,KAAK,UACLzD,GAAG,mBAKX,cAACmG,EAAA,EAAD,UACE,cAAC9C,EAAA,EAAD,UACE,eAAC+C,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAOC,IAAI,UAAX,qBACA,cAAC/C,EAAA,EAAD,CACEtD,KAAK,OACLwD,KAAK,UACLzD,GAAG,sBAMb,eAACH,EAAA,EAAD,WACE,cAACsG,EAAA,EAAD,UACE,cAAC9C,EAAA,EAAD,UACE,wEAGJ,cAAC8C,EAAA,EAAD,UACE,cAAC9C,EAAA,EAAD,UACE,eAAC+C,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAOC,IAAI,YAAX,uBACA,cAAC/C,EAAA,EAAD,CACEtD,KAAK,OACLwD,KAAK,YACLzD,GAAG,wBAMb,cAAC6F,EAAA,EAAD,CACEC,MAAM,UACN/C,QAAS,WACP,EAAKwD,gBACL,EAAKjF,SAAS,CAAE4C,OAAO,KAJ3B,oBASA,cAAC2B,EAAA,EAAD,CACEC,MAAM,SACN/C,QAAS,kBAAM,EAAKzB,SAAS,CAAE4C,OAAO,KAFxC,kCAhWd,GAAoCR,aCdrB8C,EAAb,kDACE,WAAY3F,GAAQ,IAAD,8BACjB,cAAMA,IACDM,MAAQ,CACX+C,OAAO,GAHQ,EADrB,0CAOE,WAAU,IAAD,OACP,OACE,gCACE,cAAC2B,EAAA,EAAD,CAAQY,SAAO,EAACX,MAAM,SAASY,KAAK,KAAK3D,QAAS,kBAAM,EAAKzB,SAAS,CAAE4C,OAAO,KAA/E,4BAGA,cAAC6B,EAAA,EAAD,CAAO9C,OAAQnB,KAAKX,MAAM+C,MAAO8B,OAAQlE,KAAKkE,OAA9C,SACE,cAACC,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,WACE,kEAAqCpE,KAAKjB,MAAM8F,iBAAhD,IAAmE7E,KAAKjB,MAAM+F,gBAA9E,OACA,cAACf,EAAA,EAAD,CACEY,SAAO,EAACX,MAAM,UACd/C,QAAS,WACP,EAAK8D,gBACL,EAAKvF,SAAS,CAAE4C,OAAO,KAJ3B,oBASA,cAAC2B,EAAA,EAAD,CACEY,SAAO,EAACX,MAAM,SACd/C,QAAS,kBAAM,EAAKzB,SAAS,CAAE4C,OAAO,KAFxC,gCA1Bd,2BAsCE,WACE,IAAMN,EAAgB,CACpBI,UAAWlC,KAAKjB,MAAMiG,WAElBnB,EAAWhC,EAAeoD,OAAOnD,GACvCrC,QAAQC,IAAImE,OA3ChB,GAAmCjC,aCSxBsD,EAAb,kDACE,WAAYnG,GAAQ,IAAD,8BACjB,cAAMA,IACDM,MAAQ,CACX+C,OAAO,GAHQ,EADrB,wFAQE,8BAAA7F,EAAA,6DACQuF,EAAgB,CACpBI,UAAWlC,KAAKjB,MAAMiG,UACtB3C,UAAWC,SAASC,eAAe,oBAAoB7F,MACvD8F,SAAUF,SAASC,eAAe,mBAAmB7F,MACrDgG,MAAOJ,SAASC,eAAe,gBAAgB7F,MAC/C4C,SAAUgD,SAASC,eAAe,iBAAiB7F,MACnDiG,IAAKL,SAASC,eAAe,OAAO7F,MACpCyI,oBAAqB7C,SAASC,eAAe,WAAW7F,MACxD0I,uBAAwB9C,SAASC,eAAe,WAAW7F,MAC3DkG,QAASN,SAASC,eAAe,kBAAkB7F,MACnDmG,gBAAiBP,SAASC,eAAe,0BAA0B7F,OAXvE,SAawBmF,EAAewD,OAAOvD,GAb9C,OAaQ+B,EAbR,OAcEpE,QAAQC,IAAImE,GAdd,gDARF,0EAyBE,WACE,OAAQ7D,KAAKX,MAAM+C,QA1BvB,oBA6BE,WAAU,IAAD,OACP,OACE,gCACE,cAAC2B,EAAA,EAAD,CAAQY,SAAO,EAACX,MAAM,UAAUY,KAAK,KAAK3D,QAAS,kBAAM,EAAKzB,SAAS,CAAE4C,OAAO,KAAhF,4BAGA,cAAC6B,EAAA,EAAD,CAAO9C,OAAQnB,KAAKX,MAAM+C,MAAO8B,OAAQlE,KAAKkE,OAA9C,SACE,cAACC,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,WACE,eAACE,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAOC,IAAI,mBAAX,gCACA,cAAC/C,EAAA,EAAD,CACE6D,aAActF,KAAKjB,MAAM8F,iBACzB1G,KAAK,OACLwD,KAAK,mBACLzD,GAAG,wBAGP,eAACoG,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAOC,IAAI,kBAAX,+BACA,cAAC/C,EAAA,EAAD,CACE6D,aAActF,KAAKjB,MAAM+F,gBACzB3G,KAAK,OACLwD,KAAK,kBACLzD,GAAG,uBAGP,eAACoG,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAOC,IAAI,eAAX,yBACA,eAAC/C,EAAA,EAAD,CAAOtD,KAAK,SAASwD,KAAK,eAAezD,GAAG,eAAeoH,aAActF,KAAKjB,MAAMwG,aAApF,UACE,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,wCACA,wCACA,8CAGJ,cAACjB,EAAA,EAAD,CAAWkB,OAAK,EAAhB,SACE,eAACjB,EAAA,EAAD,CAAOiB,OAAK,EAAZ,UACE,cAAC/D,EAAA,EAAD,CAAOvD,GAAG,MAAMC,KAAK,WAAWmH,aAActF,KAAKjB,MAAM0G,aAD3D,YAIF,eAACnB,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAOC,IAAI,gBAAX,4BACA,eAAC/C,EAAA,EAAD,CAAOtD,KAAK,SAASwD,KAAK,gBAAgBzD,GAAG,gBAAgBoH,aAActF,KAAKjB,MAAM2G,cAAtF,UACE,wBAAQhJ,MAAM,IAAd,mBACA,wBAAQA,MAAM,IAAd,yBACA,wBAAQA,MAAM,IAAd,6BACA,wBAAQA,MAAM,IAAd,wBACA,wBAAQA,MAAM,IAAd,0BAGJ,eAAC4H,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAOC,IAAI,UAAX,iCACA,cAAC/C,EAAA,EAAD,CACE6D,aAActF,KAAKjB,MAAM4G,eACzBxH,KAAK,OACLwD,KAAK,UACLzD,GAAG,eAGP,eAACoG,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAOC,IAAI,UAAX,oCACA,cAAC/C,EAAA,EAAD,CACE6D,aAActF,KAAKjB,MAAM6G,eACzBzH,KAAK,OACLwD,KAAK,UACLzD,GAAG,eAGP,eAACoG,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAOC,IAAI,iBAAX,4BACA,eAAC/C,EAAA,EAAD,CACAtD,KAAK,SACLwD,KAAK,iBACLzD,GAAG,iBACHoH,aAActF,KAAKjB,MAAM8G,eAJzB,UAKE,2BACA,wBAAQnJ,MAAM,IAAd,iBACA,wBAAQA,MAAM,IAAd,sBACA,wBAAQA,MAAM,IAAd,yBACA,wBAAQA,MAAM,IAAd,+BAGJ,eAAC4H,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAOC,IAAI,yBAAX,8BACA,eAAC/C,EAAA,EAAD,CACAtD,KAAK,SACLwD,KAAK,yBACLzD,GAAG,yBACHoH,aAActF,KAAKjB,MAAM+G,uBAJzB,UAKE,2BACA,wBAAQpJ,MAAM,IAAd,oBACA,wBAAQA,MAAM,IAAd,kBACA,wBAAQA,MAAM,IAAd,qBACA,wBAAQA,MAAM,IAAd,yBACA,wBAAQA,MAAM,IAAd,4BACA,wBAAQA,MAAM,IAAd,gCAGJ,cAACqH,EAAA,EAAD,CACEC,MAAM,UACN/C,QAAS,WACP,EAAK8E,gBACL,EAAKvG,SAAS,CAAE4C,OAAO,KAJ3B,oBASA,cAAC2B,EAAA,EAAD,CACEC,MAAM,SACN/C,QAAS,kBAAM,EAAKzB,SAAS,CAAE4C,OAAO,KAFxC,kCAlJd,GAAoCR,a,iBCNfoE,G,kDACnB,WAAYjH,GAAQ,IAAD,8BACjB,cAAMA,IACDM,MAAQ,CAAE4G,gBAAiB,GAAIC,aAAc,IAFjC,E,qDAKnB,WAAqB,IAAD,OAClBzH,MAAM,GAAD,OAAIF,EAAJ,eACFwB,MAAK,SAACnB,GAAD,OAAcA,EAASC,UAC5BkB,MAAK,SAACvD,GACL,EAAKgD,SAAS,CACZyG,gBAAiBzJ,S,yBAKzB,SAAY0J,GACVlG,KAAKR,SAAS,CAAC0G,aAAcA,M,oBAK/B,WACE,IAAMrC,EAAU7D,KAAKjB,MAAM8E,QACrBsC,EAAWnG,KAAKX,MAAM4G,gBACzBG,QAAO,SAAAH,GAAe,aAAI,UAAAA,EAAgBpC,eAAhB,eAAyB3F,MAAO2F,EAAQ3F,MAClEmI,MAAK,SAAC9J,EAAG+J,GAAJ,mBAAW,UAAA/J,EAAEsH,eAAF,eAAWxB,YAAX,UAAuBiE,EAAEzC,eAAzB,aAAuB,EAAWxB,aAAkB,UAAA9F,EAAEsH,eAAF,eAAWxB,cAAX,UAAyBiE,EAAEzC,eAA3B,aAAyB,EAAWxB,YAAe9F,EAAEgK,OAASD,EAAEC,OAArE,GAA0F,KACzJ7E,KAAI,SAAAwE,GAAiB,IAAD,EACnB,OACI,eAACM,EAAA,EAAD,WACI,gCACI,6BACI,yCAAYN,EAAaK,cAGjC,gCACI,6BACI,qBAAIrI,GAAE,UAAKgI,EAAaO,QAAQpE,WAAhC,UACE,8CADF,IAC4B,oBAAGqE,MAAO,CAACC,SAAU,SAArB,UAAgCT,EAAaO,QAAQpE,UAArD,IAAiE6D,EAAaO,QAAQjE,YAChH,6CAFF,IAE2B,mBAAGkE,MAAO,CAACC,SAAU,SAArB,SAAgCT,EAAaU,OAAOjF,OAC7E,cAACkF,GAAA,EAAD,CAASlG,KAAI,UAAEuF,EAAaO,eAAf,aAAE,EAAsBK,KAArC,8BAXFZ,EAAahI,OAmB/B,OACE,sBAAKA,GAAG,WAAR,iCAEuB2F,EAAQxB,UAF/B,IAE2CwB,EAAQrB,SACjD,qBAAKpC,UAAY,qBAAjB,SACG+F,W,GArDmCvE,aCwCnCmF,GAAkB,I,0HA3C3B,4BAAAxK,EAAA,sEAC2BkC,MAAM,GAAD,OAAIF,EAAJ,cAAyB,CACjDG,OAAQ,MACRC,QAAS,CACP,eAAgB,sBAJ1B,cACUC,EADV,gBAOmBA,EAASC,OAP5B,mF,iHASA,WAAamI,GAAb,eAAAzK,EAAA,sEAC2BkC,MAAM,GAAD,OAAIF,EAAJ,cAAyB,CACjDG,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBoD,KAAMC,KAAKC,UAAU+E,KAN7B,cACUpI,EADV,gBAQiBA,EAASC,OAR1B,mF,kHAUA,WAAamI,GAAb,eAAAzK,EAAA,6DACIkD,QAAQC,IAAIsH,GADhB,SAE2BvI,MAAM,UAAGF,EAAH,eAAwByI,EAAeC,WAAY,CAC5EvI,OAAQ,SACRC,QAAS,CACL,eAAgB,sBAL5B,cAEUC,EAFV,yBAQWA,GARX,2C,kHAUA,WAAaoI,GAAb,iBAAAzK,EAAA,6DACIkD,QAAQC,IAAIsH,GADhB,SAE2BvI,MAAM,UAAGF,EAAH,eAAwByI,EAAe9I,GAAI,CACpEQ,OAAQ,MACRC,QAAS,CACT,eAAgB,oBAEpBoD,KAAMC,KAAKC,UAAU+E,KAPzB,OAEUpI,EAFV,OASUpC,EAAOoC,EACba,QAAQC,IAAIlD,GAVhB,2C,+DC1BS0K,GAAb,kDACE,WAAYnI,GAAQ,IAAD,8BACjB,cAAMA,IACDM,MAAQ,GAFI,EADrB,wFAOE,gCAAA9C,EAAA,sDACU4K,EAAE,EADZ,YACeA,EAAI,IADnB,wBAEQH,EAAiB,CACrBnD,QAAS7D,KAAKjB,MAAMiG,UACpBuB,OAAOY,EACPV,QAAS,GACTG,OAAQ,GACRxH,OAAQY,KAAKjB,MAAME,UAGrBQ,QAAQC,IAAIsH,EAAenD,SAV7B,SAYyBkD,GAAgBnD,OAAOoD,GAZhD,OAYQI,EAZR,OAaE3H,QAAQC,IAAI0H,GAbd,OACuBD,IADvB,gEAPF,0EAuBE,WAAU,IAAD,OACP,OACE,8BACE,cAACpD,EAAA,EAAD,CAAQY,SAAO,EAACX,MAAM,UAAUY,KAAK,KAAK3D,QAAS,kBAAM,EAAKoG,iBAA9D,gCA1BR,GAA0CzF,aCuC7B0F,GAAkB,I,0HA1C3B,4BAAA/K,EAAA,sEAC2BkC,MAAM,GAAD,OAAIF,EAAJ,cAAyB,CACjDG,OAAQ,MACRC,QAAS,CACP,eAAgB,sBAJ1B,cACUC,EADV,gBAOmBA,EAASC,OAP5B,mF,iHASA,WAAc0I,GAAd,eAAAhL,EAAA,sEAC2BkC,MAAM,GAAD,OAAIF,EAAJ,cAAyB,CACjDG,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBoD,KAAMC,KAAKC,UAAUsF,KAN7B,cACU3I,EADV,gBAQiBA,EAASC,OAR1B,mF,kHAUA,WAAa0I,GAAb,eAAAhL,EAAA,6DACIkD,QAAQC,IAAI6H,GACN3I,EAAWH,MAAM,UAAGF,EAAH,eAAwBgJ,EAAeC,WAAY,CACtE9I,OAAQ,SACRC,QAAS,CACL,eAAgB,sBAL5B,kBAQWC,GARX,2C,kHAUA,WAAa2I,GAAb,iBAAAhL,EAAA,sDACUqC,EAAWH,MAAM,UAAGF,EAAH,eAAwBgJ,EAAeC,WAAY,CACtE9I,OAAQ,MACRC,QAAS,CACT,eAAgB,oBAEpBoD,KAAMC,KAAKC,UAAUsF,KAEf/K,EAAOoC,EACba,QAAQC,IAAIlD,GAThB,2C,+DClBSiL,GAAb,kDACE,WAAY1I,GAAQ,IAAD,8BACjB,cAAMA,IACDM,MAAQ,CACX+C,OAAO,GAHQ,EADrB,yFAQE,qCAAA7F,EAAA,6DACQgL,EAAiB,CACrB1D,QAAS7D,KAAKjB,MAAMiG,UACpB3C,UAAWC,SAASC,eAAe,qBAAqB7F,MACxD8F,SAAUF,SAASC,eAAe,oBAAoB7F,MACtDgL,MAAOpF,SAASC,eAAe,iBAAiB7F,MAChDe,MAAO6E,SAASC,eAAe,iBAAiB7F,MAChDiL,QAASrF,SAASC,eAAe,mBAAmB7F,MACpDkL,gBAAiBtF,SAASC,eAAe,0BAA0B7F,OARvE,SAUyB4K,GAAgB1D,OAAO2D,GAVhD,OAUQM,EAVR,OAWEpJ,MAAM,GAAD,OAAIF,EAAJ,mBACJwB,MAAK,SAACnB,GAAD,OAAcA,EAASC,UAC5BkB,MAAK,SAACvD,GACL,EAAKgD,SAAS,CACZsI,UAAWtL,OAGfiD,QAAQC,IAAImI,GAlBd,gDARF,0EA6BE,WACE,OAAQ7H,KAAKX,MAAM+C,QA9BvB,oBAiCE,WAAU,IAAD,OACP,OACE,gCACE,cAAC2B,EAAA,EAAD,CAAQY,SAAO,EAACX,MAAM,UAAU/C,QAAS,kBAAM,EAAKzB,SAAS,CAAE4C,OAAO,KAAtE,0BAGA,cAAC6B,EAAA,EAAD,CAAO9C,OAAQnB,KAAKX,MAAM+C,MAAO8B,OAAQlE,KAAKkE,OAA9C,SACE,cAACC,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,WACE,eAACE,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAOC,IAAI,oBAAX,iCACA,cAAC/C,EAAA,EAAD,CACEtD,KAAK,OACLwD,KAAK,oBACLzD,GAAG,yBAGP,eAACoG,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAOC,IAAI,mBAAX,gCACA,cAAC/C,EAAA,EAAD,CACEtD,KAAK,OACLwD,KAAK,mBACLzD,GAAG,wBAGP,eAACoG,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAOC,IAAI,gBAAX,mBACA,cAAC/C,EAAA,EAAD,CAAOtD,KAAK,OAAOwD,KAAK,gBAAgBzD,GAAG,qBAG7C,eAACoG,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAOC,IAAI,gBAAX,mBACA,cAAC/C,EAAA,EAAD,CAAOtD,KAAK,QAAQwD,KAAK,gBAAgBzD,GAAG,qBAG9C,eAACoG,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAOC,IAAI,kBAAX,qBACA,cAAC/C,EAAA,EAAD,CAAOtD,KAAK,OAAOwD,KAAK,kBAAkBzD,GAAG,uBAG/C,eAACoG,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAOC,IAAI,yBAAX,6BACA,cAAC/C,EAAA,EAAD,CAAOtD,KAAK,OAAOwD,KAAK,yBAAyBzD,GAAG,8BAGtD,cAAC6F,EAAA,EAAD,CACEC,MAAM,UACN/C,QAAS,WACP,EAAK8G,iBACL,EAAKvI,SAAS,CAAE4C,OAAO,KAJ3B,oBASA,cAAC2B,EAAA,EAAD,CACEC,MAAM,SACN/C,QAAS,kBAAM,EAAKzB,SAAS,CAAE4C,OAAO,KAFxC,kCAvFd,GAAqCR,aCgCxBoG,GAAsB,I,0HA3C/B,4BAAAzL,EAAA,sEAC2BkC,MAAM,GAAD,OAAIF,EAAJ,kBAA6B,CACrDG,OAAQ,MACRC,QAAS,CACP,eAAgB,sBAJ1B,cACUC,EADV,gBAOmBA,EAASC,OAP5B,mF,iHASA,WAAcoJ,GAAd,eAAA1L,EAAA,sEAC2BkC,MAAM,GAAD,OAAIF,EAAJ,kBAA6B,CACrDG,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBoD,KAAMC,KAAKC,UAAUgG,KAN7B,cACUrJ,EADV,gBAQiBA,EAASC,OAR1B,mF,kHAUA,WAAaoJ,GAAb,eAAA1L,EAAA,6DACIkD,QAAQC,IAAIuI,GACNrJ,EAAWH,MAAM,UAAGF,EAAH,mBAA4B0J,EAAmBC,eAAgB,CAClFxJ,OAAQ,SACRC,QAAS,CACL,eAAgB,sBAL5B,kBAQWC,GARX,2C,kHAUA,WAAaqJ,GAAb,iBAAA1L,EAAA,6DACIkD,QAAQC,IAAIuI,GADhB,SAE2BxJ,MAAM,UAAGF,EAAH,mBAA4B0J,EAAmB/J,GAAI,CAC5EQ,OAAQ,MACRC,QAAS,CACT,eAAgB,oBAEpBoD,KAAMC,KAAKC,UAAUgG,KAPzB,OAEUrJ,EAFV,OASUpC,EAAOoC,EACba,QAAQC,IAAIlD,GAVhB,2C,+DClBS2L,GAAb,kDACE,WAAYpJ,GAAQ,IAAD,8BACjB,cAAMA,IACDM,MAAQ,CACX+C,OAAO,GAHQ,EADrB,6FAQE,qCAAA7F,EAAA,6DACQ0L,EAAqB,CACzBG,KAAM9F,SAASC,eAAe,oBAAoB7F,MAClD2L,SAAU/F,SAASC,eAAe,wBAAwB7F,MAC1D4L,SAAUhG,SAASC,eAAe,wBAAwB7F,MAC1DmH,QAAS7D,KAAKjB,MAAMiG,WALxB,SAO6BgD,GAAoBpE,OAAOqE,GAPxD,OAOQM,EAPR,OAQE9J,MAAM,GAAD,OAAIF,EAAJ,mBACJwB,MAAK,SAACnB,GAAD,OAAcA,EAASC,UAC5BkB,MAAK,SAACvD,GACL,EAAKgD,SAAS,CACZ+I,aAAc/L,OAGlBiD,QAAQC,IAAI6I,GAfd,gDARF,0EA0BE,WACE,OAAQvI,KAAKX,MAAM+C,QA3BvB,oBA8BE,WAAU,IAAD,OACP,OACE,gCACE,cAAC2B,EAAA,EAAD,CAAQY,SAAO,EAACX,MAAM,UAAU/C,QAAS,kBAAM,EAAKzB,SAAS,CAAE4C,OAAO,KAAtE,iCAGA,cAAC6B,EAAA,EAAD,CAAO9C,OAAQnB,KAAKX,MAAM+C,MAAO8B,OAAQlE,KAAKkE,OAA9C,SACE,cAACC,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,WACE,eAACE,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAOC,IAAI,mBAAX,kBACA,cAAC/C,EAAA,EAAD,CACEtD,KAAK,OACLwD,KAAK,mBACLzD,GAAG,wBAGP,eAACoG,EAAA,EAAD,CAAWkB,OAAK,EAAhB,UACI,cAACjB,EAAA,EAAD,CAAOiB,OAAK,EAAZ,sBACE,eAAC/D,EAAA,EAAD,CACAtD,KAAK,SACLD,GAAG,uBAFH,UAGE,2BACA,yCACA,0CACA,kDAGR,eAACoG,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAOC,IAAI,uBAAX,sBACA,cAAC/C,EAAA,EAAD,CACEtD,KAAK,OACLwD,KAAK,uBACLzD,GAAG,4BAGP,cAAC6F,EAAA,EAAD,CACEC,MAAM,UACN/C,QAAS,WACP,EAAKuH,qBACL,EAAKhJ,SAAS,CAAE4C,OAAO,KAJ3B,oBASA,cAAC2B,EAAA,EAAD,CACEC,MAAM,SACN/C,QAAS,kBAAM,EAAKzB,SAAS,CAAE4C,OAAO,KAFxC,kCA3Ed,GAAyCR,aCFpB6G,G,kDACnB,WAAY1J,GAAQ,IAAD,8BACjB,cAAMA,IAeRC,SAAW,SAAAzB,GACT,IAAMyH,EAAY9F,OAAO3B,EAAE4B,OAAOzC,OAC5BmH,EAAU,EAAKxE,MAAMyE,SAASvE,MAAK,SAAAsE,GAAO,OAAIA,EAAQ3F,KAAO8G,KACnE,EAAKxF,SAAS,CAAEqE,YAChBpE,QAAQC,IAAI,EAAKL,OACjBI,QAAQC,IAAInC,EAAE4B,OAAOzC,QAnBrB,EAAK2C,MAAQ,CAAEyE,SAAU,GAAID,QAAS,KAAM3F,GAAI,MAF/B,E,qDAKnB,WAAqB,IAAD,OAElBO,MAAM,GAAD,OAAIF,EAAJ,cACFwB,MAAK,SAACnB,GAAD,OAAcA,EAASC,UAC5BkB,MAAK,SAACvD,GACL,EAAKgD,SAAS,CACZsE,SAAUtH,S,oBAalB,WAAU,IAAD,oDACDkM,EAAK,UAAG1I,KAAKX,MAAMwE,eAAd,aAAG,EAAoBxB,UAC5BsG,EAAI,UAAG3I,KAAKX,MAAMwE,eAAd,aAAG,EAAoBrB,SACjC,OACE,eAACzE,EAAA,EAAD,WACE,eAACsG,EAAA,EAAD,WACE,eAAC9C,EAAA,EAAD,WACE,cAACgD,EAAA,EAAD,CAAOC,IAAI,kBAAX,4BACA,yBAAQtG,GAAG,kBAAkBc,SAAUgB,KAAKhB,SAA5C,UACE,wBAAQ4J,UAAQ,EAAhB,kBACC5I,KAAKX,MAAMyE,SAASpC,KAAI,SAAAmC,GAAO,OAC9B,yBAAyBnH,MAAOmH,EAAQ3F,GAAxC,UACG2F,EAAQxB,UADX,IACuBwB,EAAQrB,WADlBqB,EAAQ3F,aAM3B,cAACqD,EAAA,EAAD,UACE,cAAC,EAAD,SAGJ,2CAAcmH,EAAd,IAAsBC,KACtB,sBAAKvI,UAAU,MAAf,UACE,qBAAKA,UAAU,WAAf,SACE,eAACyI,EAAA,EAAD,CAAM9G,MAAI,EAAC4C,SAAO,EAACX,MAAM,UAAzB,UACGhE,KAAKX,MAAMwE,SAAW,cAACiF,EAAA,EAAD,CAASlI,IAAG,oBAAKZ,KAAKX,MAAMwE,eAAhB,aAAK,EAAoBkF,eAAiBhI,IAAG,oBAAKf,KAAKX,MAAMwE,eAAhB,aAAK,EAAoBxB,aACxGrC,KAAKX,MAAMwE,SAAU,eAACmF,EAAA,EAAD,WACpB,8BAAG,6CAAH,IAA6BhJ,KAAKX,MAAMwE,QAAQvE,SAASqC,QACzD,8BAAG,4CAAH,IAA4B3B,KAAKX,MAAMwE,QAAQnB,SAC/C,8BAAG,6DAAH,IAA6C1C,KAAKX,MAAMwE,QAAQuB,0BAChE,eAACf,EAAA,EAAD,WACA,cAAC9C,EAAA,EAAD,CAAK0H,GAAG,IAAR,SACE,cAAC,EAAD,CACEjE,UAAS,UAAEhF,KAAKX,MAAMwE,eAAb,aAAE,EAAoB3F,GAC/B2G,iBAAgB,UAAE7E,KAAKX,MAAMwE,eAAb,aAAE,EAAoBxB,UACtCyC,gBAAe,UAAE9E,KAAKX,MAAMwE,eAAb,aAAE,EAAoBrB,aAGzC,cAACjB,EAAA,EAAD,CAAK0H,GAAG,IAAR,SACE,cAAC,EAAD,CACEjE,UAAS,UAAEhF,KAAKX,MAAMwE,eAAb,aAAE,EAAoB3F,GAC/B2G,iBAAgB,UAAE7E,KAAKX,MAAMwE,eAAb,aAAE,EAAoBxB,UACtCyC,gBAAe,UAAE9E,KAAKX,MAAMwE,eAAb,aAAE,EAAoBrB,SACrC+C,aAAY,UAAEvF,KAAKX,MAAMwE,eAAb,aAAE,EAAoBnB,MAClCgD,cAAa,UAAE1F,KAAKX,MAAMwE,eAAb,iBAAE,EAAoBvE,gBAAtB,aAAE,EAA8BpB,GAC7CyH,eAAc,UAAE3F,KAAKX,MAAMwE,eAAb,aAAE,EAAoBsB,oBACpCS,eAAc,UAAE5F,KAAKX,MAAMwE,eAAb,aAAE,EAAoBuB,uBACpCK,WAAU,UAAEzF,KAAKX,MAAMwE,eAAb,aAAE,EAAoBlB,IAChCkD,eAAc,UAAE7F,KAAKX,MAAMwE,eAAb,iBAAE,EAAoBjB,eAAtB,aAAE,EAA6B1E,GAC7C4H,uBAAsB,UAAE9F,KAAKX,MAAMwE,eAAb,iBAAE,EAAoBhB,uBAAtB,aAAE,EAAqC3E,OAGjE,cAACqD,EAAA,EAAD,CAAK0H,GAAG,IAAR,SACE,cAAC,GAAD,CACEjE,UAAS,UAAEhF,KAAKX,MAAMwE,eAAb,aAAE,EAAoB3F,GAC/B2G,iBAAgB,UAAE7E,KAAKX,MAAMwE,eAAb,aAAE,EAAoBxB,UACtCyC,gBAAe,UAAE9E,KAAKX,MAAMwE,eAAb,aAAE,EAAoBrB,SACrCvD,SAAQ,UAAEe,KAAKX,MAAMwE,eAAb,aAAE,EAAoBvE,SAASpB,UAI3C,cAAC,GAAD,CACE8G,UAAS,UAAEhF,KAAKX,MAAMwE,eAAb,aAAE,EAAoB3F,KAGjC,cAAC,GAAD,CACE8G,UAAS,UAAEhF,KAAKX,MAAMwE,eAAb,aAAE,EAAoB3F,aAOvC,qBAAKkC,UAAU,WAAf,SACGJ,KAAKX,MAAMwE,SAAW,cAAC,GAAD,CAAoBA,QAAS7D,KAAKX,MAAMwE,sB,GAnGtCjC,aCFtBsH,G,4JAPX,WACI,OACI,qBAAKtI,IAAI,uQAAuQC,OAAO,MAAME,IAAI,iBAAiBoI,MAAM,e,GAHjTvH,a,kBC4CNwH,GAAmB,I,0HA3C5B,4BAAA7M,EAAA,sEAC2BkC,MAAM,GAAD,OAAIF,EAAJ,eAA0B,CAClDG,OAAQ,MACRC,QAAS,CACP,eAAgB,sBAJ1B,cACUC,EADV,gBAOmBA,EAASC,OAP5B,mF,iHASA,WAAcwK,GAAd,eAAA9M,EAAA,sEAC2BkC,MAAM,GAAD,OAAIF,EAAJ,eAA0B,CAClDG,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBoD,KAAMC,KAAKC,UAAUoH,KAN7B,cACUzK,EADV,gBAQiBA,EAASC,OAR1B,mF,kHAUA,WAAawK,GAAb,eAAA9M,EAAA,6DACIkD,QAAQC,IAAI2J,GACNzK,EAAWH,MAAM,UAAGF,EAAH,gBAAyB8K,EAAgBC,YAAa,CACzE5K,OAAQ,SACRC,QAAS,CACL,eAAgB,sBAL5B,kBAQWC,GARX,2C,kHAUA,WAAayK,GAAb,iBAAA9M,EAAA,sDACIkD,QAAQC,IAAI2J,GACNzK,EAAWH,MAAM,UAAGF,EAAH,gBAAyB8K,EAAgBnL,GAAI,CAChEQ,OAAQ,MACRC,QAAS,CACT,eAAgB,oBAEpBoD,KAAMC,KAAKC,UAAUoH,KAEf7M,EAAOoC,EACba,QAAQC,IAAIlD,GAVhB,2C,+DCpBS+M,GAAb,kDACE,WAAYxK,GAAQ,IAAD,8BACjB,cAAMA,IACDM,MAAQ,CACX+C,OAAO,GAHQ,EADrB,0FAQE,8BAAA7F,EAAA,6DACQ8M,EAAkB,CACtBvF,SAAU9D,KAAKjB,MAAM8E,QAAQ3F,GAC7BsL,SAAUxJ,KAAKjB,MAAM0H,QAAQvI,GAC7BkJ,SAAUpH,KAAKjB,MAAMb,GACrBuL,QAASzJ,KAAKjB,MAAM6H,OAAO1I,GAC3BkB,OAAQY,KAAKjB,MAAMK,OAAOlB,GAC1BqI,OAAQvG,KAAKjB,MAAMwH,OACnBmD,aAAcpH,SAASC,eAAe,gBAAgB7F,MACtDiN,gBAAiBrH,SAASC,eAAe,mBAAmB7F,MAC5DkN,eAAgBC,KAAKC,MACrBnI,KAAMW,SAASC,eAAe,QAAQ7F,OAX1C,SAa0B0M,GAAiBxF,OAAOyF,GAblD,OAaQU,EAbR,OAcEtK,QAAQC,IAAIqK,GAdd,gDARF,0EAyBE,WACE,OAAQ/J,KAAKX,MAAM+C,QA1BvB,oBA6BE,WAAU,IAAD,OACP,OACE,gCACE,cAAC2B,EAAA,EAAD,CAAQC,MAAM,OAAO/C,QAAS,kBAAM,EAAKzB,SAAS,CAAE4C,OAAO,KAA3D,uBAGA,cAAC6B,EAAA,EAAD,CAAO9C,OAAQnB,KAAKX,MAAM+C,MAAO8B,OAAQ,kBAAM,EAAKA,UAApD,SACE,eAACC,EAAA,EAAD,CACEjG,GAAG,eACHwI,MAAO,CACLsD,gBAAiB,YACjBhG,MAAO,QACP2C,SAAU,OACVsD,UAAW,UANf,UASE,8BACE,+CACCjK,KAAKjB,MAAM8E,QAAQxB,UAFtB,IAEkCrC,KAAKjB,MAAM8E,QAAQrB,YAErD,8BACE,+CACCxC,KAAKjB,MAAM0H,QAAQpE,UAFtB,IAEkCrC,KAAKjB,MAAM0H,QAAQjE,YAErD,8BACE,8CACCxC,KAAKjB,MAAM6H,OAAOjF,QAErB,8BACE,8CACC3B,KAAKjB,MAAMwH,UAEd,eAACnC,EAAA,EAAD,CAAMhE,UAAU,eAAhB,UACE,eAACkE,EAAA,EAAD,CAAWpG,GAAG,aAAd,UACE,cAACqG,EAAA,EAAD,CAAOC,IAAI,OAAX,SACE,mDAEF,cAAC/C,EAAA,EAAD,CACEtD,KAAK,OACLwD,KAAK,OACLzD,GAAG,OACHkC,UAAU,oBAGd,eAACkE,EAAA,EAAD,CAAWpG,GAAG,aAAd,UACE,cAACqG,EAAA,EAAD,CAAOC,IAAI,eAAX,SACE,iDAEF,cAAC/C,EAAA,EAAD,CACEtD,KAAK,SACLwD,KAAK,eACLzD,GAAG,eACHkC,UAAU,oBAGd,eAACkE,EAAA,EAAD,CAAWpG,GAAG,aAAd,UACE,cAACqG,EAAA,EAAD,CAAOC,IAAI,kBAAX,SACE,oDAEF,cAAC/C,EAAA,EAAD,CACEtD,KAAK,SACLwD,KAAK,kBACLzD,GAAG,kBACHkC,UAAU,oBAGd,cAAC2D,EAAA,EAAD,CACEC,MAAM,UACN/C,QAAS,WACP,EAAKiJ,kBACL,EAAK1K,SAAS,CAAE4C,OAAO,KAJ3B,oBASA,cAAC2B,EAAA,EAAD,CACEC,MAAM,SACN/C,QAAS,kBAAM,EAAKzB,SAAS,CAAE4C,OAAO,KAFxC,mCAxGd,GAAsCR,aCGzBuI,GAAiB,I,6HAZ1B,WAAcC,GAAd,eAAA7N,EAAA,sEAC2BkC,MAAM,GAAD,OAAIF,EAAJ,aAAwB,CAChDG,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBoD,KAAMC,KAAKC,UAAUmI,KAN7B,cACUxL,EADV,gBAQmBA,EAASC,OAR5B,mF,+DC2CSwL,GAAsB,I,0HA3C/B,4BAAA9N,EAAA,sEAC2BkC,MAAM,GAAD,OAAIF,EAAJ,kBAA6B,CACrDG,OAAQ,MACRC,QAAS,CACP,eAAgB,sBAJ1B,cACUC,EADV,gBAOmBA,EAASC,OAP5B,mF,iHASA,WAAcyL,GAAd,eAAA/N,EAAA,sEAC2BkC,MAAM,GAAD,OAAIF,EAAJ,kBAA6B,CACrDG,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBoD,KAAMC,KAAKC,UAAUqI,KAN7B,cACU1L,EADV,gBAQiBA,EAASC,OAR1B,mF,kHAUA,WAAayL,GAAb,eAAA/N,EAAA,6DACIkD,QAAQC,IAAI4K,GACN1L,EAAWH,MAAM,UAAGF,EAAH,mBAA4B+L,EAAmBC,eAAgB,CAClF7L,OAAQ,SACRC,QAAS,CACL,eAAgB,sBAL5B,kBAQWC,GARX,2C,kHAUA,WAAa0L,GAAb,iBAAA/N,EAAA,sDACIkD,QAAQC,IAAI4K,GACN1L,EAAWH,MAAM,UAAGF,EAAH,mBAA4B+L,EAAmBC,eAAgB,CAClF7L,OAAQ,MACRC,QAAS,CACT,eAAgB,oBAEpBoD,KAAMC,KAAKC,UAAUqI,KAEf9N,EAAOoC,EACba,QAAQC,IAAIlD,GAVhB,2C,+DCfSgO,GAAb,kDACE,WAAYzL,GAAQ,IAAD,8BACjB,cAAMA,IACDM,MAAQ,CACX+C,OAAO,EACPqI,cAAc,IAJC,EADrB,qDASE,WAAqB,IAAD,OAClBhM,MAAM,GAAD,OAAIF,EAAJ,mBACJwB,MAAK,SAACnB,GAAD,OAAcA,EAASC,UAC5BkB,MAAK,SAACvD,GACL,EAAKgD,SAAS,CACZiL,cAAejO,EAAK4J,QAAO,SAAAsE,GAAK,OAAIA,EAAM7G,QAAQ3F,KAAO,EAAKa,MAAM8E,QAAQ3F,aAdpF,kEAmBE,8BAAA3B,EAAA,6DACQ6N,EAAgB,CACpBtG,SAAU9D,KAAKjB,MAAM8E,QAAQ3F,GAC7BsL,SAAUxJ,KAAKjB,MAAM0H,QAAQvI,GAC7BuL,QAASzJ,KAAKjB,MAAM6H,OAAO1I,GAC3BqI,OAAQvG,KAAKjB,MAAMwH,OACnB6B,KAAM9F,SAASC,eAAe,oBAAoB7F,MAClDiO,WAAYrI,SAASC,eAAe,cAAc7F,MAClDkO,OAAQtI,SAASC,eAAe,UAAU7F,MAC1CmO,cAAevI,SAASC,eAAe,iBAAiB7F,MACxDoO,gBAAiBxI,SAASC,eAAe,mBAAmB7F,MAC5DqO,qBAAsBzI,SAASC,eAAe,wBAAwB7F,MACtEsO,WAAY1I,SAASC,eAAe,cAAc7F,MAClDuO,aAAa3I,SAASC,eAAe,gBAAgB7F,MACrDwO,kBAAmB5I,SAASC,eAAe,qBAAqB7F,MAChEyO,SAAU7I,SAASC,eAAe,YAAY7F,MAC9C0O,WAAY9I,SAASC,eAAe,cAAc7F,MAClD2O,gBAAiB/I,SAASC,eAAe,mBAAmB7F,MAC5D4O,WAAYhJ,SAASC,eAAe,cAAc7F,OAlBtD,SAoBwByN,GAAevG,OAAOwG,GApB9C,OAoBQmB,EApBR,OAqBE9L,QAAQC,IAAI6L,GArBd,gDAnBF,6HA2CE,WAAyBpE,GAAzB,wBAAA5K,EAAA,6DACQ+N,EAAqB,CACzBlC,KAAM9F,SAASC,eAAe,oBAAoB7F,MAClD2L,SAAUlB,EAAEkB,SACZmD,KAAMlJ,SAASC,eAAe,mBAAmB4E,EAAEjJ,IAAIxB,MACvD+O,QAASnJ,SAASC,eAAe,sBAAsB4E,EAAEjJ,IAAIxB,MAC7DgP,YAAapJ,SAASC,eAAe,0BAA0B4E,EAAEjJ,IAAIxB,MACrEkC,SAAU0D,SAASC,eAAe,uBAAuB4E,EAAEjJ,IAAIxB,MAC/DoH,SAAU9D,KAAKjB,MAAM8E,QACrB4G,cAAetD,EAAEjJ,IATrB,SAW6BmM,GAAoBzG,OAAO0G,GAXxD,OAWQqB,EAXR,OAYElN,MAAM,CAACF,WAAS,kBACfwB,MAAK,SAACnB,GAAD,OAAcA,EAASC,UAC5BkB,MAAK,SAACvD,GACL,EAAKgD,SAAS,CACZmM,aAAcnP,OAGlBiD,QAAQC,IAAIiM,GAnBd,gDA3CF,4FAiEE,WAA2B,IAAD,OAAC3L,KAAKX,MAAMoL,cAAcmB,SAAS,SAAAC,GAAgB,OAC3E,EAAKC,mBAAmBD,QAlE5B,oBAoEE,WACE,OAAQ7L,KAAKX,MAAM+C,QArEvB,oBAyEE,WAAU,IAAD,OACP,OACE,gCACE,cAAC2B,EAAA,EAAD,CACEC,MAAM,OACN/C,QAAS,kBAAM,EAAKzB,SAAS,CAAE4C,OAAO,KAFxC,8BAMA,cAAC6B,EAAA,EAAD,CAAO9C,OAAQnB,KAAKX,MAAM+C,MAAO8B,OAAQ,kBAAM,EAAKA,UAApD,SACE,eAACC,EAAA,EAAD,CAAWjG,GAAG,eAAewI,MAAO,CAAEsD,gBAAiB,YAAahG,MAAO,QAAS2C,SAAU,OAAQsD,UAAW,UAAjH,UACE,8BACE,+CACCjK,KAAKjB,MAAM8E,QAAQxB,UAFtB,IAEkCrC,KAAKjB,MAAM8E,QAAQrB,YAErD,8BACE,+CACCxC,KAAKjB,MAAM0H,QAAQpE,UAFtB,IAEkCrC,KAAKjB,MAAM0H,QAAQjE,YAErD,8BACE,8CACCxC,KAAKjB,MAAM6H,OAAOjF,QAErB,8BACE,8CACC3B,KAAKjB,MAAMwH,UAGd,eAACnC,EAAA,EAAD,CAAMhE,UAAU,eAAhB,UACA,eAACkE,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAOC,IAAI,mBAAX,kBACA,cAAC/C,EAAA,EAAD,CACEtD,KAAK,OACLwD,KAAI,mBACJzD,GAAE,wBAGL8B,KAAKX,MAAMoL,cAAcrE,QAAO,SAAC2F,GAAD,OAAUA,EAAKzD,WAAa,EAAKvJ,MAAM6H,OAAOoF,SAA6B,WAAlBD,EAAKzD,YAAuB5G,KAAK,SAAA6G,GAAY,aACzI,8BACE,eAACxK,EAAA,EAAD,CAAWG,GAAG,aAAd,UACE,cAACoG,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,CAAOC,IAAI,uBAAuBtG,GAAE,qCAAyBqK,QAAzB,IAAyBA,OAAzB,EAAyBA,EAAcrK,IAAMxB,MAAK,OAAE6L,QAAF,IAAEA,OAAF,EAAEA,EAAcrK,GAAtG,UAA2GqK,EAAaF,SAAxH,SAEF,cAAC/D,EAAA,EAAD,CAAWkB,OAAK,EAAhB,SACE,eAACjB,EAAA,EAAD,CAAOiB,OAAK,EAAZ,2BACK+C,EAAazE,gBADlB,aACK,EAAuBzB,UAD5B,mBAEE,eAACZ,EAAA,EAAD,CACAtD,KAAK,SACLD,GAAE,iCAAqBqK,QAArB,IAAqBA,OAArB,EAAqBA,EAAcrK,IAFrC,UAGE,2BACA,wBAAQxB,MAAM,OAAd,iBACA,wBAAQA,MAAM,QAAd,wBAIN,eAAC2H,EAAA,EAAD,WACE,cAAC9C,EAAA,EAAD,UACE,eAAC+C,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAOC,IAAI,sBAAX,wBACA,cAAC/C,EAAA,EAAD,CACEtD,KAAK,SACLD,GAAE,oCAAwBqK,QAAxB,IAAwBA,OAAxB,EAAwBA,EAAcrK,WAI9C,cAACqD,EAAA,EAAD,UACE,eAAC+C,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAOC,IAAI,0BAAX,4BACA,cAAC/C,EAAA,EAAD,CACEtD,KAAK,SACLD,GAAE,wCAA4BqK,QAA5B,IAA4BA,OAA5B,EAA4BA,EAAcrK,cAKpD,eAACoG,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAOC,IAAI,uBAAX,sBACA,cAAC/C,EAAA,EAAD,CACEtD,KAAK,SACLD,GAAE,qCAAyBqK,QAAzB,IAAyBA,OAAzB,EAAyBA,EAAcrK,iBAM/C,eAACoG,EAAA,EAAD,CAAWpG,GAAG,aAAd,UACE,cAACqG,EAAA,EAAD,CAAOC,IAAI,aAAX,SACE,8CAEF,eAAC/C,EAAA,EAAD,CAAOtD,KAAK,SAASwD,KAAK,aAAazD,GAAG,aAAakC,UAAU,eAAjE,UACE,2BACA,6CACA,kDAGJ,eAACkE,EAAA,EAAD,CAAWpG,GAAG,aAAd,UACE,cAACqG,EAAA,EAAD,CAAOC,IAAI,SAAX,SACE,sDAEF,cAAC/C,EAAA,EAAD,CAAOtD,KAAK,OAAOwD,KAAK,SAASzD,GAAG,SAASkC,UAAU,oBAEzD,eAACrC,EAAA,EAAD,CAAW2I,MAAO,CAAEsD,gBAAiB,OAAS9L,GAAG,aAAjD,UACE,yDACA,eAACmG,EAAA,EAAD,CAAK4H,MAAI,EAAT,UACE,cAAC1K,EAAA,EAAD,CAAK0H,GAAI,EAAT,SACE,eAAC3E,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAOC,IAAI,gBAAX,qCACA,eAAC/C,EAAA,EAAD,CACEtD,KAAK,SACLwD,KAAK,gBACLzD,GAAG,gBACHkC,UAAU,eAJZ,UAME,2BACA,wBAAQ1D,MAAM,IAAd,+BACA,wBAAQA,MAAM,IAAd,uCACA,wBAAQA,MAAM,IAAd,wBACA,wBAAQA,MAAM,IAAd,mCAIN,cAAC6E,EAAA,EAAD,CAAK0H,GAAI,EAAT,SACE,eAAC3E,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAOC,IAAI,kBAAX,4DAGA,eAAC/C,EAAA,EAAD,CACEtD,KAAK,SACLwD,KAAK,kBACLzD,GAAG,kBACHkC,UAAU,eACV8L,UAAQ,EALV,UAOE,sEACA,wEACA,wEACA,uEACA,oGAIA,kFAGA,8EAGA,mEACA,oEACA,4EAKR,eAAC5H,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAOC,IAAI,uBAAX,6CAGA,cAAC/C,EAAA,EAAD,CACEtD,KAAK,OACLwD,KAAK,uBACLzD,GAAG,uBACHkC,UAAU,uBAIhB,eAACrC,EAAA,EAAD,CAAW2I,MAAO,CAAEsD,gBAAiB,aAAe9L,GAAG,aAAvD,UACE,4CACA,eAACmG,EAAA,EAAD,CAAK4H,MAAI,EAAT,UACE,cAAC1K,EAAA,EAAD,CAAK0H,GAAI,EAAT,SACE,eAAC3E,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAOC,IAAI,aAAX,wBACA,eAAC/C,EAAA,EAAD,CAAOtD,KAAK,SAASwD,KAAK,aAAazD,GAAG,aAAakC,UAAU,eAAjE,UACE,2BACA,wBAAQ1D,MAAM,IAAd,qFAIA,wBAAQA,MAAM,IAAd,2HAKA,wBAAQA,MAAM,IAAd,iHAIA,wBAAQA,MAAM,IAAd,gHAIA,wBAAQA,MAAM,IAAd,6HAON,cAAC6E,EAAA,EAAD,CAAK0H,GAAI,EAAT,SACE,eAAC3E,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAOC,IAAI,eAAX,+CAGA,eAAC/C,EAAA,EAAD,CACEtD,KAAK,SACLwD,KAAK,eACLzD,GAAG,eACHkC,UAAU,eACV8L,UAAQ,EALV,UAOE,kDACA,qDACA,0DACA,yDACA,2DACA,oFAGA,4EACA,kFAGA,uDACA,sEACA,oDACA,yDACA,sEACA,yEACA,kEACA,qEACA,mDACA,kFAGA,4EAKR,eAAC5H,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAOC,IAAI,oBAAX,gCACA,cAAC/C,EAAA,EAAD,CACEtD,KAAK,OACLwD,KAAK,oBACLzD,GAAG,oBACHkC,UAAU,uBAIhB,eAACrC,EAAA,EAAD,CAAW2I,MAAO,CAAEsD,gBAAiB,QAAU9L,GAAG,aAAlD,UACE,+CACA,eAACmG,EAAA,EAAD,CAAK4H,MAAI,EAAT,UACE,cAAC1K,EAAA,EAAD,CAAK0H,GAAI,EAAT,SACE,eAAC3E,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAOC,IAAI,WAAX,yCACA,eAAC/C,EAAA,EAAD,CAAOtD,KAAK,SAASwD,KAAK,WAAWzD,GAAG,WAAWkC,UAAU,eAA7D,UACE,2BACA,wBACElC,GAAG,OACHwI,MAAO,CAAEsD,gBAAiB,QAAShG,MAAM,SACzCtH,MAAM,IAHR,+DAOA,wBACEwB,GAAG,OACHwI,MAAO,CAAEsD,gBAAiB,UAC1BtN,MAAM,IAHR,mFAQA,wBACEwB,GAAG,OACHwI,MAAO,CAAEsD,gBAAiB,OAAQhG,MAAM,SACxCtH,MAAM,IAHR,6EAQA,wBACEwB,GAAG,OACHwI,MAAO,CAAEsD,gBAAiB,MAAOhG,MAAM,SACvCtH,MAAM,IAHR,2EAUN,cAAC6E,EAAA,EAAD,CAAK0H,GAAI,EAAT,SACE,eAAC3E,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAOC,IAAI,aAAX,kDAGA,eAAC/C,EAAA,EAAD,CACEtD,KAAK,SACLwD,KAAK,aACLzD,GAAG,aACHkC,UAAU,eACV8L,UAAQ,EALV,UAOE,iDACA,qDACA,iDACA,+CACA,mDACA,0CACA,yCACA,+CACA,6CACA,sEACA,uDACA,yEACA,sEACA,uEACA,oEACA,6DACA,qEAKR,eAAC5H,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAOC,IAAI,kBAAX,mCACA,cAAC/C,EAAA,EAAD,CACEtD,KAAK,OACLwD,KAAK,kBACLzD,GAAG,kBACHkC,UAAU,uBAIhB,eAACkE,EAAA,EAAD,CAAWpG,GAAG,aAAd,UACE,cAACqG,EAAA,EAAD,CAAOC,IAAI,aAAX,SACE,8CAEF,cAAC/C,EAAA,EAAD,CAAOtD,KAAK,OAAOwD,KAAK,aAAazD,GAAG,aAAakC,UAAU,oBAIjE,cAAC2D,EAAA,EAAD,CACEC,MAAM,UACN/C,QAAS,WACP,EAAKkL,gBACL,EAAKC,0BACL,EAAK5M,SAAS,CAAE4C,OAAO,KAL3B,oBAUA,cAAC2B,EAAA,EAAD,CACEC,MAAM,SACN/C,QAAS,kBAAM,EAAKzB,SAAS,CAAE4C,OAAO,KAFxC,mCAxad,GAAoCR,aCPvByK,GAAb,kDACE,WAAYtN,GAAQ,IAAD,8BACjB,cAAMA,IACDM,MAAQ,CACX+C,OAAO,GAHQ,EADrB,0CAQE,WACE,OAAQpC,KAAKX,MAAM+C,QATvB,oBAYE,WAAU,IAAD,WACP,OACE,gCACE,cAAC2B,EAAA,EAAD,CAAQC,MAAM,OAAO/C,QAAS,kBAAM,EAAKzB,SAAS,CAAE4C,OAAO,KAA3D,0BAGA,cAAC6B,EAAA,EAAD,CAAO9C,OAAQnB,KAAKX,MAAM+C,MAAO8B,OAAQlE,KAAKkE,OAA9C,SACE,eAACC,EAAA,EAAD,WACE,eAAC0E,EAAA,EAAD,WACE,cAACyD,GAAA,EAAD,UACE,+BAAKtM,KAAKjB,MAAM8E,QAAQxB,UAAxB,IAAoCrC,KAAKjB,MAAM8E,QAAQrB,cAEzD,eAACwG,EAAA,EAAD,WACE,8BAAG,4CAAH,IAA4BhJ,KAAKjB,MAAM8E,QAAQnB,SAC/C,8BACE,0DADF,IACyC1C,KAAKjB,MAAM8E,QAAQsB,uBAE5D,8BACE,6DAAyC,IACxCnF,KAAKjB,MAAM8E,QAAQuB,0BAErBpF,KAAKjB,MAAM8E,QAAQiE,UAAUpG,KAAI,SAACmG,GAAD,OAChC,gCACE,8BACE,6CADF,IAC4BA,EAASxF,UADrC,IACiDwF,EAASrF,YAE1D,8BAAG,4CAAH,IAA4BqF,EAASpK,SACrC,8BAAG,4CAAH,IAA4BoK,EAASH,SACrC,8BAAG,8CAAH,IAA8BG,EAASF,iBAG3C,8BAAG,8CAAH,cAA8B3H,KAAKjB,MAAM8E,QAAQjB,eAAjD,aAA8B,EAA4BzE,QAC1D,8BAAG,uDAAH,cAAuC6B,KAAKjB,MAAM8E,QAAQhB,uBAA1D,aAAuC,EAAoC1E,cAG/E,cAAC4F,EAAA,EAAD,CACEC,MAAM,SACN/C,QAAS,kBAAM,EAAKzB,SAAS,CAAE4C,OAAO,KAFxC,+BA/CZ,GAAiCR,aCHZ2K,G,kDACnB,WAAYxN,GAAQ,IAAD,8BACjB,cAAMA,IACDM,MAAQ,CAAEmN,gBAAiB,GAAIC,aAAc,GAAIrK,OAAO,GAF5C,E,qDAKnB,WAAoB,IAAD,OACjB3D,MAAM,GAAD,OAAIF,EAAJ,qBAAwByB,KAAKjB,MAAM0H,QAAQvI,GAA3C,eACF6B,MAAK,SAACnB,GAAD,OAAcA,EAASC,UAC5BkB,MAAK,SAACvD,GACLiD,QAAQC,IAAIlD,GACZ,EAAKgD,SAAS,CACZgN,gBAAiBhQ,S,gCAKzB,SAAmBkQ,GAAY,IAAD,OACxBA,EAAUjG,UAAYzG,KAAKjB,MAAM0H,UAGrChH,QAAQC,IAAIM,KAAKjB,MAAM0H,SACvBhI,MAAM,GAAD,OAAIF,EAAJ,qBAAwByB,KAAKjB,MAAM0H,QAAQvI,GAA3C,eACF6B,MAAK,SAACnB,GAAD,OAAcA,EAASC,UAC5BkB,MAAK,SAACvD,GACLiD,QAAQC,IAAIlD,GACZ,EAAKgD,SAAS,CACZgN,gBAAiBhQ,U,yBAKzB,SAAYiQ,GACVzM,KAAKR,SAAS,CAAEiN,aAAcA,IAC9BzM,KAAKR,SAAS,CAAE4C,OAAO,M,oBAIzB,WAAU,IAAD,OACDqE,EAAUzG,KAAKjB,MAAM0H,QACrBkG,EAAkB3M,KAAKX,MAAMmN,gBAChCnG,MAAK,SAAU9J,EAAG+J,GACjB,OAAO/J,EAAEgK,OAASD,EAAEC,UAErB7E,KAAI,SAAC+K,GACJ,OACE,qBAA2BrM,UAAU,MAArC,SACE,eAACyI,EAAA,EAAD,CAAM5H,QAAS,kBAAM,EAAK2L,YAAYH,IAAtC,UACE,eAACH,GAAA,EAAD,sBAAoBG,EAAalG,UACjC,eAACsG,GAAA,EAAD,CAAUnG,MAAO,CAAE1C,MAAO,SAA1B,UACE,yCACWyI,EAAa5I,QAAQxB,UAAW,IACxCoK,EAAa5I,QAAQrB,YAExB,yCACW,EAAKzD,MAAM0H,QAAQpE,UAAW,IACtC,EAAKtD,MAAM0H,QAAQjE,YAEtB,6CAAgBiK,EAAa7F,OAAOjF,QACpC,yCAAY8K,EAAa7F,OAAOoF,WAChC,cAACnF,GAAA,EAAD,CAASlG,KAAM,EAAK5B,MAAM0H,QAAQK,KAAlC,2BAEF,cAAC,GAAD,CAAajD,QAAS4I,EAAa5I,UAEnC,cAAC,GAAD,CACEA,QAAS4I,EAAa5I,QACtB4C,QAASgG,EAAahG,QACtBG,OAAQ6F,EAAa7F,OACrBL,OAAQkG,EAAalG,OACrBa,SAAUqF,EACVrN,OAAQqN,EAAarN,SAGvB,cAAC,GAAD,CACEyE,QAAS4I,EAAa5I,QACtB4C,QAASgG,EAAahG,QACtBG,OAAQ6F,EAAa7F,OACrBL,OAAQkG,EAAalG,aA/BjBkG,EAAavO,OAsC7B,OACE,sBAAKkC,UAAU,YAAYlC,GAAG,WAA9B,iCACuBuI,EAAQpE,UAD/B,IAC2CoE,EAAQjE,SACjD,qBAAKpC,UAAU,MAAf,SAAsBuM,W,GAvFe/K,aCDxBkL,G,kDACnB,WAAY/N,GAAQ,IAAD,8BACjB,cAAMA,IAeRC,SAAW,SAAAzB,GACT,IAAMwP,EAAY7N,OAAO3B,EAAE4B,OAAOzC,OAC5B+J,EAAU,EAAKpH,MAAMmK,SAASjK,MAAK,SAAAkH,GAAO,OAAIA,EAAQvI,KAAO6O,KACnE,EAAKvN,SAAS,CAAEiH,YAChBhH,QAAQC,IAAI,EAAKL,OACjBI,QAAQC,IAAInC,EAAE4B,OAAOzC,QAnBrB,EAAK2C,MAAQ,CAAEmK,SAAU,GAAI/C,QAAS,MAFrB,E,qDAKnB,WAAqB,IAAD,OAElBhI,MAAM,GAAD,OAAIF,EAAJ,cACFwB,MAAK,SAACnB,GAAD,OAAcA,EAASC,UAC5BkB,MAAK,SAACvD,GACL,EAAKgD,SAAS,CACZgK,SAAUhN,S,oBAalB,WAAU,IAAD,EACP,OACE,eAACuB,EAAA,EAAD,WACE,qDAAciC,KAAKX,MAAMoH,eAAzB,aAAc,EAAoBpE,aAClC,sBAAKjC,UAAY,MAAjB,UACE,cAACmE,EAAA,EAAD,CAAOC,IAAI,kBAAX,4BACA,yBAAQtG,GAAG,kBAAkBc,SAAUgB,KAAKhB,SAA5C,UACE,wBAAQ4J,UAAQ,EAAhB,kBACC5I,KAAKX,MAAMmK,SAAS9H,KAAI,SAAA+E,GAAO,OAC9B,yBAAyB/J,MAAO+J,EAAQvI,GAAxC,UACGuI,EAAQpE,UADX,IACuBoE,EAAQjE,WADlBiE,EAAQvI,aAM1B8B,KAAKX,MAAMoH,SAAW,cAAC,GAAD,CAAiBA,QAASzG,KAAKX,MAAMoH,iB,GAxC/B7E,aCOxBoL,GAAb,kDACE,WAAYjO,GAAQ,IAAD,8BACjB,cAAMA,IACDM,MAAQ,CACX+C,OAAO,EACPoH,SAAU,KACVC,QAAS,KACT9H,KAAM,MANS,EADrB,qDAWE,WAAqB,IAAD,OAElBlD,MAAM,GAAD,OAAIF,EAAJ,cAEFwB,MAAK,SAACnB,GAAD,OAAcA,EAASC,UAC5BkB,MAAK,SAACvD,GAEL,EAAKgD,SAAS,CACZgK,SAAUhN,OAGhBiC,MAAM,GAAD,OAAIF,EAAJ,aAEFwB,MAAK,SAACnB,GAAD,OAAcA,EAASC,UAC5BkB,MAAK,SAACvD,GAEL,EAAKgD,SAAS,CACZiK,QAASjN,SA5BnB,mEAiCE,4BAAAD,EAAA,6DACQyK,EAAiB,CACrB9I,GAAI8B,KAAKjB,MAAMkI,WACfR,QAASwG,SAAS3K,SAASC,eAAe,mBAAmB7F,OAC7DkK,OAAQqG,SAAS3K,SAASC,eAAe,kBAAkB7F,OAC3D6J,OAAQvG,KAAKjB,MAAMwH,QALvB,SAOQQ,GAAgB1B,OAAO2B,GAP/B,uBAQQhH,KAAKjB,MAAMmO,WARnB,OASElN,KAAKR,SAAS,CAAE4C,OAAO,IATzB,gDAjCF,0EA6CE,WACE,OAAQpC,KAAKX,MAAM+C,QA9CvB,oBAiDE,WAAU,IAAD,WACP,OACE,gCACE,cAAC2B,EAAA,EAAD,CACAa,KAAK,KACHZ,MAAM,OACN/C,QAAS,kBAAM,EAAKzB,SAAS,CAAE4C,OAAO,KAHxC,6BAOA,cAAC6B,EAAA,EAAD,CAAO9C,OAAQnB,KAAKX,MAAM+C,MAAO8B,OAAQlE,KAAKkE,OAA9C,SACE,cAACC,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,WACE,eAACE,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAOC,IAAI,kBAAX,4BACA,eAAC/C,EAAA,EAAD,CAAOtD,KAAK,SAASD,GAAG,kBAAxB,UACE,wBAAQxB,MAAM,KAAKkM,UAAQ,EAA3B,kBADF,UAEG5I,KAAKX,MAAMmK,gBAFd,aAEG,EAAqB9H,KAAI,SAAC+E,GAAD,OACxB,yBAAQ/J,MAAO+J,EAAQvI,GAAvB,UACGuI,EAAQpE,UADX,IACuBoE,EAAQjE,qBAKrC,cAAC8B,EAAA,EAAD,UACE,eAAC7C,EAAA,EAAD,CAAOtD,KAAK,SAASD,GAAG,iBAAxB,UACA,wBAAQxB,MAAM,KAAKkM,UAAQ,EAA3B,kBADA,UAEG5I,KAAKX,MAAMoK,eAFd,aAEG,EAAoB/H,KAAI,SAACkF,GAAD,OACvB,wBAAQlK,MAAOkK,EAAO1I,GAAtB,SAA2B0I,EAAOjF,eAIxC,cAACoC,EAAA,EAAD,CACEC,MAAM,UACN/C,QAAS,WACP,EAAKkM,kBAHT,oBAQA,cAACpJ,EAAA,EAAD,CACEC,MAAM,SACN/C,QAAS,kBAAM,EAAKzB,SAAS,CAAE4C,OAAO,KAFxC,kCAzFd,GAAqCR,aCRhBwL,G,kDACnB,WAAYrO,GAAQ,IAAD,8BACjB,cAAMA,IACDM,MAAQ,CAAEgO,UAAW,GAAIjG,SAAU,KAAMtD,SAAU,GAAID,QAAS,MAFpD,E,qDAKnB,WACE7D,KAAKsN,eACL7N,QAAQC,IAAIM,KAAKjB,MAAMK,U,0BAGzB,WAAgB,IAAD,OACbX,MAAM,GAAD,OAAIF,EAAJ,cAEFwB,MAAK,SAACnB,GAAD,OAAcA,EAASC,UAC5BkB,MAAK,SAAC+D,GACHA,EAASuC,MAAK,SAACkH,EAAUC,GAAX,OAAwBD,EAAS/K,SAASgL,EAAShL,YAChE4D,QAAO,SAAAqH,GAAQ,aAAIA,EAASnO,SAASpB,MAAlB,UAAyB,EAAKa,MAAMK,cAApC,aAAyB,EAAmBlB,OAC/D0N,SAAQ,SAAA/H,GAAO,OAAIA,EAAQwJ,UAAUhH,MAAK,SAACqH,EAAWC,GAAZ,OAA0BD,EAAUnH,OAAOoH,EAAUpH,aAClG,EAAK/G,SAAS,CACZsE,kB,yBAKR,SAAYsD,GAEVpH,KAAKR,SAAS,CAAE4H,SAAUA,IAC1B3H,QAAQC,IAAI0H,K,2BAGd,WACE4F,GAAgB9I,W,oBAGlB,WAAU,IAAD,OACP,OACE,qBAAKiF,MAAM,eAAX,SACE,eAAC3C,EAAA,EAAD,CAAOoH,UAAQ,EAACC,OAAK,EAACjJ,KAAK,KAA3B,UACE,uBAAOuE,MAAM,SAAb,SACE,+BACE,+BACE,yCACA,uBAFF,IAEQ,0BAER,+BACE,uBAAK,uBAAK,uBACV,0CACA,6CAEF,+BACE,0CACA,6CAEF,+BACE,0CACA,8CAEF,+BACE,0CACA,+CAEF,+BACE,0CACA,+CAEF,+BACE,0CACA,+CAEF,+BACE,0CACA,8CAEF,+BACE,0CACA,6CAEF,+BACE,0CACA,6CAEF,+BACE,2CACA,kDAIN,gCACGnJ,KAAKX,MAAMyE,SAASpC,KAAI,SAACmC,GAAD,OACvB,+BACE,+BAAsBA,EAAQxB,UAA9B,IAA0CwB,EAAQrB,WAAzCqB,EAAQ3F,IAChB2F,EAAQwJ,UAAUhH,MAAK,SAAC9J,EAAG+J,GAAJ,OAAU/J,EAAEgK,OAASD,EAAEC,UAAQ7E,KAAI,SAAC0F,GAAD,OAC3D,qBAAIhH,UAAWgH,EAASX,QAAQpE,UAAWnE,GAAG,YAA9C,UACE,8CAAyB,gCAAQkJ,EAASR,OAAOjF,OACjD,uBACA,+CAA0B,kCAAQyF,EAASX,QAAQpE,UAAzB,IAAqC+E,EAASX,QAAQjE,YAHlF,IAGoG,uBAClG,cAAC,GAAD,CAAiB0K,SAAU,kBAAM,EAAKI,gBAAgBrG,WAAYG,EAASlJ,GAAIqI,OAAQa,EAASb,gC,GAjG5E3E,a,kBCA/B,SAASkM,GAAT,GAA0D,IAAvBlM,EAAsB,EAAjCmM,UAAyBC,EAAQ,8BACtDnS,EAASkB,IAATlB,KAER,OACE,cAAC,IAAD,6BACMmS,GADN,IAEEC,OAAQ,SAAClP,GAGP,OAAOlD,EAAO,cAAC+F,EAAD,gBAAe7C,IAAY,cAAC,IAAD,CAAUV,GAAG,e,sBCVzC6P,G,kDACnB,WAAYnP,GAAQ,IAAD,8BACjB,cAAMA,IACDM,MAAQ,CAAE8O,MAAO,GAAI/G,SAAU,KAAMtD,SAAU,GAAID,QAAS,MAFhD,E,qDAKnB,WACE7D,KAAKsN,iB,0BAGP,WAAgB,IAAD,OACb7O,MAAM,GAAD,OAAIF,EAAJ,mBAEFwB,MAAK,SAACnB,GAAD,OAAcA,EAASC,UAC5BkB,MAAK,SAACoO,GACHA,EAAM9H,MAAK,SAAC+H,EAAOC,GAAR,OAAkBD,EAAMhG,KAAKiG,EAAMjG,QAChD,EAAK5I,SAAS,CACZ2O,e,qBAKR,SAAQA,GAENnO,KAAKR,SAAS,CAAE2O,MAAOA,IACvB1O,QAAQC,IAAIyO,K,oBAId,WAAU,IAAD,OACP,OACE,qBAAKhF,MAAM,eAAX,SACE,eAAC3C,EAAA,EAAD,CAAOoH,UAAQ,EAACC,OAAK,EAACjJ,KAAK,KAA3B,UACE,uBAAOuE,MAAM,SAAb,SACE,+BACE,6BACE,wCAEF,6BACE,4CAEF,6BACE,wCAEF,6BACE,6CAEF,6BACE,iDAEF,6BACE,gDAIN,gCACGnJ,KAAKX,MAAM8O,MAAM/H,QAAO,SAAAvC,GAAO,aAAI,UAAAA,EAAQC,gBAAR,eAAkB5F,MAAO,EAAKa,MAAM8E,QAAQ3F,MAAIwD,KAAI,SAAC4M,GAAD,OACtF,+BACE,6BAAmBA,EAAKlG,MAAfkG,EAAKpQ,IACd,6BACE,gCAAQoQ,EAAKjG,aAEf,6BACE,gCAAQiG,EAAK9C,SAEf,6BACE,gCAAQ8C,EAAK7C,YAEf,6BACE,gCAAQ6C,EAAK5C,gBAEf,6BACE,gCAAQ4C,EAAK1P,8B,GAxEWgD,aCQ7B2M,GAAb,kDACE,WAAYxP,GAAQ,IAAD,8BACjB,cAAMA,IACDM,MAAQ,CACX+C,OAAO,GAHQ,EADrB,6FAQE,8BAAA7F,EAAA,6DACQ0L,EAAqB,CACvBG,KAAM9F,SAASC,eAAe,oBAAoB7F,MAClD2L,SAAU/F,SAASC,eAAe,wBAAwB7F,MAC1D4L,SAAUhG,SAASC,eAAe,wBAAwB7F,MAC1DwB,GAAI8B,KAAKjB,MAAMmJ,gBALrB,SAO6BF,GAAoB3C,OAAO4C,GAPxD,OAOQM,EAPR,OAQE9I,QAAQC,IAAI6I,GARd,gDARF,0EAmBE,WACE,OAAQvI,KAAKX,MAAM+C,QApBvB,oBAuBE,WAAU,IAAD,OACP,OACE,gCACE,cAAC2B,EAAA,EAAD,CAAQY,SAAO,EAACX,MAAM,UAAUY,KAAK,KAAK3D,QAAS,kBAAM,EAAKzB,SAAS,CAAE4C,OAAO,KAAhF,6BAGA,cAAC6B,EAAA,EAAD,CAAO9C,OAAQnB,KAAKX,MAAM+C,MAAO8B,OAAQlE,KAAKkE,OAA9C,SACE,cAACC,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,WACE,eAACE,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAOC,IAAI,mBAAX,kBACA,cAAC/C,EAAA,EAAD,CACE6D,aAActF,KAAKjB,MAAMyP,iBACzBrQ,KAAK,OACLwD,KAAK,mBACLzD,GAAG,wBAGP,eAACoG,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAOC,IAAI,uBAAX,sBACA,cAAC/C,EAAA,EAAD,CACE6D,aAActF,KAAKjB,MAAM0P,qBACzBtQ,KAAK,OACLwD,KAAK,uBACLzD,GAAG,4BAGP,eAACoG,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAOC,IAAI,uBAAX,yBACA,eAAC/C,EAAA,EAAD,CAAOtD,KAAK,SAASwD,KAAK,uBAAuBzD,GAAG,uBAAuBoH,aAActF,KAAKjB,MAAM2P,qBAApG,UACE,yCACA,0CACA,kDAGJ,cAAC3K,EAAA,EAAD,CACEC,MAAM,UACN/C,QAAS,WACP,EAAK0N,qBACL,EAAKnP,SAAS,CAAE4C,OAAO,KAJ3B,oBASA,cAAC2B,EAAA,EAAD,CACEC,MAAM,SACN/C,QAAS,kBAAM,EAAKzB,SAAS,CAAE4C,OAAO,KAFxC,kCAnEd,GAAyCR,a,mBCUpBgN,G,kDACnB,WAAY7P,GAAQ,IAAD,8BACjB,cAAMA,IAmCRC,SAAW,SAACzB,GACV,IAAMyH,EAAY9F,OAAO3B,EAAE4B,OAAOzC,OAC5BmH,EAAU,EAAKxE,MAAMyE,SAASvE,MAClC,SAACsE,GAAD,OAAaA,EAAQ3F,KAAO8G,KAE9B,EAAKxF,SAAS,CAAEqE,YAChBpE,QAAQC,IAAI,EAAKL,OACjBI,QAAQC,IAAInC,EAAE4B,OAAOzC,QAzCrB,EAAKwH,OAAS,EAAKA,OAAOtE,KAAZ,gBACd,EAAKP,MAAQ,CACXwP,UAAW,KAEb,EAAKxP,MAAQ,CAAEyE,SAAU,GAAID,QAAS,KAAM3F,GAAI,KAAMuM,cAAe,IANpD,E,0CASnB,SAAOqE,GACD9O,KAAKX,MAAMwP,YAAcC,GAC3B9O,KAAKR,SAAS,CACZqP,UAAWC,M,+BAKjB,WAAqB,IAAD,OAElBrQ,MAAM,GAAD,OAAIF,EAAJ,cACFwB,MAAK,SAACnB,GAAD,OAAcA,EAASC,UAC5BkB,MAAK,SAACvD,GACL,EAAKgD,SAAS,CACZsE,SAAUtH,OAGhBiC,MAAM,GAAD,OAAIF,EAAJ,mBACFwB,MAAK,SAACnB,GAAD,OAAcA,EAASC,UAC5BkB,MAAK,SAACvD,GACL,EAAKgD,SAAS,CACZiL,cAAejO,S,oBAgBvB,WAAU,IAAD,iBACDkM,EAAK,UAAG1I,KAAKX,MAAMwE,eAAd,aAAG,EAAoBxB,UAC5BsG,EAAI,UAAG3I,KAAKX,MAAMwE,eAAd,aAAG,EAAoBrB,SACjC,OACE,eAACzE,EAAA,EAAD,WACE,eAACsD,EAAA,EAAD,CAAK0N,MAAI,EAAT,UACE,cAACzN,EAAA,EAAD,UACE,cAACuF,GAAA,EAAD,CACEzG,UAAW4O,KAAW,CAAEC,OAAiC,MAAzBjP,KAAKX,MAAMwP,YAC3C5N,QAAS,WACP,EAAKiD,OAAO,MAHhB,wBASF,cAAC5C,EAAA,EAAD,UACE,cAACuF,GAAA,EAAD,CACEzG,UAAW4O,KAAW,CAAEC,OAAiC,MAAzBjP,KAAKX,MAAMwP,YAC3C5N,QAAS,WACP,EAAKiD,OAAO,MAHhB,iCAWJ,cAACG,EAAA,EAAD,UACE,eAAC9C,EAAA,EAAD,WACE,cAACgD,EAAA,EAAD,CAAOC,IAAI,kBAAX,4BACA,yBAAQtG,GAAG,kBAAkBc,SAAUgB,KAAKhB,SAA5C,UACE,wBAAQ4J,UAAQ,EAAhB,kBACC5I,KAAKX,MAAMyE,SAASpC,KAAI,SAACmC,GAAD,OACvB,yBAAyBnH,MAAOmH,EAAQ3F,GAAxC,UACG2F,EAAQxB,UADX,IACuBwB,EAAQrB,WADlBqB,EAAQ3F,eAO7B,2CACYwK,EADZ,IACoBC,KAEpB,sBAAKvI,UAAU,MAAf,UACE,qBAAKA,UAAU,WAAf,SACE,eAACyI,EAAA,EAAD,CAAM9G,MAAI,EAAC4C,SAAO,EAACX,MAAM,UAAzB,UACGhE,KAAKX,MAAMwE,SACV,cAACiF,EAAA,EAAD,CACElI,IAAG,oBAAKZ,KAAKX,MAAMwE,eAAhB,aAAK,EAAoBkF,eAC5BhI,IAAG,oBAAKf,KAAKX,MAAMwE,eAAhB,aAAK,EAAoBxB,aAG/BrC,KAAKX,MAAMwE,SACV,eAACmF,EAAA,EAAD,WACE,8BACE,6CADF,IAC4BhJ,KAAKX,MAAMwE,QAAQvE,SAASqC,QAExD,8BACE,4CADF,IAC2B3B,KAAKX,MAAMwE,QAAQnB,SAE9C,8BACE,6DAAyC,IACxC1C,KAAKX,MAAMwE,QAAQuB,0BAEtB,cAAC,GAAD,CACEJ,UAAS,UAAEhF,KAAKX,MAAMwE,eAAb,aAAE,EAAoB3F,aAMzC,qBAAKkC,UAAU,WAAf,SACE,eAAC8O,GAAA,EAAD,CAAYL,UAAW7O,KAAKX,MAAMwP,UAAlC,UACE,cAACM,GAAA,EAAD,CAASC,MAAM,IAAf,SACGpP,KAAKX,MAAMwE,SACV,cAAC,GAAD,CAAcA,QAAS7D,KAAKX,MAAMwE,YAGtC,cAACsL,GAAA,EAAD,CAASC,MAAM,IAAf,SACE,qBAAKjG,MAAM,eAAX,SACE,eAAC3C,EAAA,EAAD,CAAOoH,UAAQ,EAACC,OAAK,EAACjJ,KAAK,KAA3B,UACE,uBAAOuE,MAAM,SAAb,SACE,+BACE,6BACE,wCAEF,6BACE,4CAEF,6BACE,4CAEF,6BACE,gDAIN,gCACGnJ,KAAKX,MAAMoL,cACTrE,QACC,SAACiJ,GAAD,eACE,UAAAA,EAASxL,eAAT,eAAkB3F,OAAlB,UAAyB,EAAKmB,MAAMwE,eAApC,aAAyB,EAAoB3F,OAEhDwD,KAAI,SAAC4M,GAAD,OACH,+BACE,6BAAmBA,EAAKlG,MAAfkG,EAAKpQ,IACd,6BACE,gCAAQoQ,EAAKjG,aAEf,6BACE,gCAAQiG,EAAKhG,aAEf,6BACE,cAAC,GAAD,CACEF,KAAMkG,EAAKlG,KACXC,SAAUiG,EAAKjG,SACfC,SAAUgG,EAAKhG,SACfJ,eAAgBoG,EAAKpQ,qC,GArKnB0D,aCsBnB0N,G,kDAhCX,WAAYvQ,GAAQ,IAAD,8BACf,cAAMA,IACDM,MAAQ,CACTyE,SAAU,GACV0F,SAAS,GACTpK,OAAQ,MALG,E,qDASnB,WACIY,KAAKR,SAAS,CAACJ,OAAOY,KAAKjB,MAAMK,SACjCK,QAAQC,IAAIM,KAAKX,MAAMD,U,oBAG3B,WAAU,IAAD,UACL,OACI,8BAEI,eAAC,IAAD,WACI,cAAC0O,GAAD,CAAcyB,KAAK,QAAQnQ,OAAM,UAAEY,KAAKjB,aAAP,aAAE,EAAYK,OAAQ2O,UAAWa,KAClE,cAACd,GAAD,CAAcyB,KAAK,aAAanQ,OAAM,UAAEY,KAAKjB,aAAP,aAAE,EAAYK,OAAQ2O,UAAWX,KACvE,cAACU,GAAD,CAAcyB,KAAK,YAAYnQ,OAAM,UAAEY,KAAKjB,aAAP,aAAE,EAAYK,OAAQ2O,UAAWjB,KACtE,cAACgB,GAAD,CAAcyB,KAAK,YAAYnQ,OAAM,UAAEY,KAAKjB,aAAP,aAAE,EAAYK,OAAQ2O,UAAWtF,KACtE,cAACqF,GAAD,CAAcyB,KAAK,QAAQnQ,OAAM,UAAEY,KAAKjB,aAAP,aAAE,EAAYK,OAAQ2O,UAAW7E,KAClE,cAAC,IAAD,CAAU7K,GAAG,mB,GA1BduD,aCJZ,SAAS4N,KAAY,MAEAzS,IAAlBlB,EAFkB,EAElBA,KAAMgB,EAFY,EAEZA,QAERQ,EAAUC,cAJU,4CAM1B,sBAAAf,EAAA,sEAEQM,IAFR,OAKEQ,EAAQS,KAAK,UALf,4CAN0B,sBAc1B,IAAMsB,EAASN,EAAOM,OAEtB,OACE,gCAEE,iDAAavD,QAAb,IAAaA,OAAb,EAAaA,EAAM4B,MAAnB,OACA,wBAAQwD,QApBc,2CAoBtB,sBACA,cAAC,IAAD,UACE,sBAAKb,UAAU,MAAf,UACI,cAAC,EAAD,IACA,cAAC,GAAD,CACEhB,OAAQA,Y,ICJPqQ,G,4JAhBX,WACI,OACE,cAAC,IAAD,UACE,cAAC/T,EAAD,UACE,eAAC,IAAD,WACA,cAACoS,GAAD,CAAc4B,OAAK,EAACH,KAAK,IAAIxB,UAAWyB,KACtC,cAAC,IAAD,CAAOD,KAAK,UAAUxB,UAAW9Q,IACjC,cAAC,IAAD,CAAOsS,KAAK,SAASxB,UAAWzP,e,GAR9BsD,aCEH+N,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB9P,MAAK,YAAkD,IAA/C+P,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASlC,OACP,cAAC,IAAMmC,WAAP,UACE,cAAC,GAAD,MAEF9N,SAASC,eAAe,SAG1BoN,O","file":"static/js/main.916edce2.chunk.js","sourcesContent":["import { createClient } from '@supabase/supabase-js'\r\n\r\nconst supabase = createClient(\r\n  process.env.REACT_APP_SUPABASE_URL,\r\n  process.env.REACT_APP_SUPABASE_PUBLIC_KEY\r\n)\r\n\r\nexport { supabase }","import React, { useContext, useState, useEffect } from 'react'\r\nimport { supabase } from '../supabase'\r\n\r\nconst AuthContext = React.createContext()\r\n\r\nexport function AuthProvider({ children }) {\r\n    const [user, setUser] = useState()\r\n    const [loading, setLoading] = useState(true)\r\n  \r\n    useEffect(() => {\r\n      // Check active sessions and sets the user\r\n      const session = supabase.auth.session()\r\n  \r\n      setUser(session?.user ?? null)\r\n      setLoading(false)\r\n  \r\n      // Listen for changes on auth state (logged in, signed out, etc.)\r\n      const { data: listener } = supabase.auth.onAuthStateChange(\r\n        async (event, session) => {\r\n          setUser(session?.user ?? null)\r\n          setLoading(false)\r\n        }\r\n      )\r\n  \r\n      return () => {\r\n        listener?.unsubscribe()\r\n      }\r\n    }, [])\r\n  \r\n    // Will be passed down to Signup, Login and Dashboard components\r\n    const value = {\r\n      signUp: (data) => supabase.auth.signUp(data),\r\n      signIn: (data) => supabase.auth.signIn(data),\r\n      signOut: () => supabase.auth.signOut(),\r\n      user,\r\n    }\r\n  \r\n    return (\r\n      <AuthContext.Provider value={value}>\r\n        {!loading && children}\r\n      </AuthContext.Provider>\r\n    )\r\n  }\r\n\r\n  export function useAuth() {\r\n    return useContext(AuthContext)\r\n  }","import { useRef } from 'react'\r\nimport { useHistory, Link } from 'react-router-dom'\r\nimport { Container } from 'reactstrap'\r\nimport { useAuth } from '../contexts/Auth'\r\n\r\nexport function Signup() {\r\n  const emailRef = useRef()\r\n  const passwordRef = useRef()\r\n\r\n  // Get signUp function from the auth context\r\n  const { signUp } = useAuth()\r\n\r\n  const history = useHistory()\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault()\r\n\r\n    // Get email and password input values\r\n    const email = emailRef.current.value\r\n    const password = passwordRef.current.value\r\n\r\n    // Calls `signUp` function from the context\r\n    const { error } = await signUp({ email, password })\r\n\r\n    if (error) {\r\n      alert('error signing in')\r\n    } else {\r\n      // Redirect user to Dashboard\r\n      history.push('/')\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n    <Container>\r\n    <form onSubmit={handleSubmit}>\r\n        <label htmlFor=\"input-email\">Email</label>\r\n        <br />\r\n        <input id=\"input-email\" type=\"email\" ref={emailRef} />\r\n        <br />\r\n        <label htmlFor=\"input-password\">Password</label>\r\n        <br />\r\n        <input id=\"input-password\" type=\"password\" ref={passwordRef} />\r\n\r\n        <br />\r\n\r\n        <button type=\"submit\">Sign up</button>\r\n      </form>\r\n\r\n      <br />\r\n\r\n      <p>\r\n        Already have an account? <Link to=\"/login\">Log In</Link>\r\n      </p>\r\n    </Container>\r\n      \r\n    </>\r\n  )\r\n}","import { useRef } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { Container } from 'reactstrap'\r\nimport { useAuth } from '../contexts/Auth'\r\n\r\nexport function Login() {\r\n  const emailRef = useRef()\r\n  const passwordRef = useRef()\r\n\r\n  // Get signUp function from the auth context\r\n  const { signIn } = useAuth()\r\n\r\n  const history = useHistory()\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault()\r\n\r\n    // Get email and password input values\r\n    const email = emailRef.current.value\r\n    const password = passwordRef.current.value\r\n\r\n    // Calls `signIn` function from the context\r\n    const { error } = await signIn({ email, password })\r\n\r\n    if (error) {\r\n      alert('error signing in')\r\n    } else {\r\n      // Redirect user to Dashboard\r\n      history.push('/')\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n    <Container>\r\n      <form onSubmit={handleSubmit}>\r\n        <label htmlFor=\"input-email\">Email</label>\r\n        <br />\r\n        <input id=\"input-email\" type=\"email\" ref={emailRef} />\r\n        <br />\r\n        <label htmlFor=\"input-password\">Password</label>\r\n        <br />\r\n        <input id=\"input-password\" type=\"password\" ref={passwordRef} />\r\n\r\n        <br />\r\n\r\n        <button type=\"submit\">Login</button>\r\n      </form>\r\n\r\n      <br />\r\n\r\n      {/* <p>\r\n        Don't have an account? <Link to=\"/signup\">Sign Up</Link>\r\n      </p> */}\r\n    </Container>\r\n      \r\n    </>\r\n  )\r\n}\r\n","export const baseURL = 'http://localhost:3001';","import {baseURL} from \"../baseURL\";\r\n\r\nclass CampusService {\r\n    async all () {\r\n        const response = await fetch(`${baseURL}/campuses`, {\r\n            method: \"GET\",\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n          });\r\n          return await response.json();\r\n    }\r\n}\r\n\r\nexport const campusService = new CampusService();","import React, { Component } from 'react';\r\nimport { Nav, Navbar, NavbarBrand, NavbarToggler, Collapse, NavItem, Jumbotron, Input, Col } from 'reactstrap';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { campusService } from '../services/campusService';\r\n\r\nclass Header extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.toggleNav = this.toggleNav.bind(this);\r\n        this.state = {\r\n            isNavOpen: false,\r\n            campuses: [],\r\n            campus: null\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        campusService.all().then((campuses) => {\r\n            this.setState({\r\n                campuses\r\n            })\r\n            console.log(this.state.campuses)\r\n        })\r\n    }\r\n\r\n\r\n    toggleNav() {\r\n        this.setState({\r\n            isNavOpen: !this.state.isNavOpen\r\n        });\r\n    }\r\n\r\n    onChange = e => {\r\n        const campusId = Number(e.target.value)\r\n        const campus = this.state.campuses.find(campus => campus.id === campusId) \r\n        this.setState({ campus });\r\n        console.log(campus);\r\n        console.log(e.target.value)\r\n      }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Jumbotron fluid>\r\n                    <div className=\"container\" id=\"app\">\r\n                        <div className=\"row\" id=\"wrapper\">\r\n                            <div className=\"col\">\r\n                                <h1 className=\"glitch\" data-text=\"CyberCampus\">CyberCampus</h1>\r\n                                <h2>Let the robots do the work for you!</h2>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Jumbotron>\r\n                <Navbar dark sticky=\"top\" expand=\"md\">\r\n                    <div className=\"container\">\r\n                        <NavbarBrand className=\"mr-auto\" href=\"/\"><img src='https://qyctrtcwtwasdktftmuy.supabase.co/storage/v1/object/sign/images/Apple.png?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1cmwiOiJpbWFnZXMvQXBwbGUucG5nIiwiaWF0IjoxNjIzMDkyOTc0LCJleHAiOjE5Mzg0NTI5NzR9.kI-zXjC828rQxRlF0dGG0zSP1fHGFN_qaY-8h7yPSLE' height=\"50\" width=\"50\" alt=\"Pirate Ship\"/></NavbarBrand>\r\n                        <NavbarToggler onClick={this.toggleNav} />\r\n                        <Collapse isOpen={this.state.isNavOpen} navbar>\r\n                            <Nav navbar>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/home\">Home</NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/teachers\">Teachers</NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/students\">Students</NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/schedules\">Schedule</NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/sped\">Sped</NavLink>\r\n                                </NavItem>\r\n                            </Nav>\r\n                        </Collapse>\r\n                        <Col sm={3}>\r\n                            <Input type=\"select\" id=\"selectCampus\" onChange={this.onChange}>\r\n                                <option></option>\r\n                                {this.state.campuses.map((campus) => <option value={campus.id}>{campus.name}</option>)}\r\n                            </Input >\r\n                        </Col>\r\n                    </div>\r\n                </Navbar>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Header","import {baseURL} from \"../baseURL\";\r\n\r\nclass StudentService {\r\n    async all () {\r\n        const response = await fetch(`${baseURL}/students`, {\r\n            method: \"GET\",\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n          });\r\n          return await response.json();\r\n    };\r\n    async create (studentObject) {\r\n        const response = await fetch(`${baseURL}/students`, {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify(studentObject),\r\n        });\r\n        return await response.json();\r\n    };\r\n    async delete(studentObject){\r\n        console.log(studentObject)\r\n        const response = fetch(`${baseURL}/students/`+studentObject.studentID, {\r\n            method: \"DELETE\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n        })\r\n        return response;\r\n    };\r\n    async update(studentObject) {\r\n        const response = fetch(`${baseURL}/students/`+studentObject.studentID, {\r\n            method: \"PUT\",\r\n            headers: {\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(studentObject),\r\n    });\r\n        const data = response;\r\n        console.log(data);\r\n    }\r\n}\r\n\r\nexport const studentService = new StudentService();","import { Component } from \"react\";\r\nimport {baseURL} from \"../baseURL\";\r\nimport {\r\n  Form,\r\n  FormGroup,\r\n  Input,\r\n  Label,\r\n  Button,\r\n  Modal,\r\n  ModalBody,\r\n  Row,\r\n  Col,\r\n  Container\r\n} from \"reactstrap\";\r\nimport { studentService } from \"../services/studentService\";\r\n\r\n\r\nexport class StudentCreator extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      modal: false,\r\n    };\r\n  }\r\n\r\n  async createStudent() {\r\n    const studentObject = {\r\n      firstName: document.getElementById(\"studentFirstName\").value,\r\n      lastName: document.getElementById(\"studentLastName\").value,\r\n      birthDate: document.getElementById(\"birthDate\").value,\r\n      grade: document.getElementById(\"studentGrade\").value,\r\n      campuses: document.getElementById(\"studentCampus\").value,\r\n      iep: document.getElementById(\"IEP\").value,\r\n      funding: document.getElementById(\"studentFunding\").value,\r\n      instructionmode: document.getElementById(\"studentInstructionMode\").value,\r\n      previousSchools: document.getElementById(\"previousSchools\").value,\r\n      allergies: document.getElementById(\"allergies\").value,\r\n      hearingLimitations: document.getElementById(\"hearingLimitations\").value,\r\n      visionLimitations: document.getElementById(\"visionLimitations\").value,\r\n      mobilityLimitations: document.getElementById(\"mobilityLimitations\").value,\r\n      sensitivities: document.getElementById(\"sensitivities\").value,\r\n      therapies: document.getElementById(\"therapies\").value,\r\n      social: document.getElementById(\"social\").value,\r\n      emotional: document.getElementById(\"emotional\").value,\r\n      physical: document.getElementById(\"physical\").value,\r\n      math: document.getElementById(\"math\").value,\r\n      reading: document.getElementById(\"reading\").value,\r\n      writing: document.getElementById(\"writing\").value,\r\n      interests: document.getElementById(\"interests\").value,\r\n    };\r\n    const student = await studentService.create(studentObject);\r\n    fetch(`${baseURL}/students`)\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      this.setState({\r\n        students: data,\r\n      });\r\n    });\r\n    console.log(student);\r\n  }\r\n\r\n  toggle() {\r\n    return !this.state.modal;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Button color=\"link\" onClick={() => this.setState({ modal: true })}>\r\n          Add Student\r\n        </Button>\r\n        <Modal isOpen={this.state.modal} toggle={this.toggle}>\r\n          <ModalBody>\r\n            <Form>\r\n              <Row>\r\n                <Col>\r\n                  <FormGroup>\r\n                    <Label for=\"studentFirstName\">First Name</Label>\r\n                    <Input\r\n                      type=\"text\"\r\n                      name=\"studentFirstName\"\r\n                      id=\"studentFirstName\"\r\n                    />\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col>\r\n                  <FormGroup>\r\n                    <Label for=\"studentLastName\">Last Name</Label>\r\n                    <Input\r\n                      type=\"text\"\r\n                      name=\"studentLastName\"\r\n                      id=\"studentLastName\"\r\n                    />\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col>\r\n                  <FormGroup>\r\n                    <Label for=\"birthDate\">Date of Birth</Label>\r\n                    <Input\r\n                      type=\"date\"\r\n                      name=\"birthDate\"\r\n                      id=\"birthDate\"\r\n                    />\r\n                  </FormGroup>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col>\r\n                  <FormGroup>\r\n                    <Label for=\"studentGrade\">Grade Level</Label>\r\n                    <Input type=\"select\" name=\"studentGrade\" id=\"studentGrade\">\r\n                      <option>0</option>\r\n                      <option>1</option>\r\n                      <option>2</option>\r\n                      <option>3</option>\r\n                      <option>4</option>\r\n                      <option>5</option>\r\n                      <option>6</option>\r\n                      <option>7</option>\r\n                      <option>8</option>\r\n                      <option>9</option>\r\n                      <option>10</option>\r\n                      <option>11</option>\r\n                      <option>12</option>\r\n                    </Input>\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col>\r\n                  <FormGroup>\r\n                    <Label for=\"IEP\">IEP</Label>\r\n                    <Input type=\"select\" name=\"IEP\" id=\"IEP\">\r\n                      <option></option>\r\n                      <option value=\"true\">Yes</option>\r\n                      <option value=\"false\">No</option>\r\n                    </Input>\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col>\r\n                  <FormGroup>\r\n                    <Label for=\"studentCampus\">Student Campus</Label>\r\n                    <Input type=\"select\" name=\"studentCampus\" id=\"studentCampus\">\r\n                      <option></option>\r\n                      <option value=\"1\">Tempe</option>\r\n                      <option value=\"2\">Queen Creek</option>\r\n                      <option value=\"3\">Litchfield Park</option>\r\n                      <option value=\"4\">Scottsdale</option>\r\n                      <option value=\"5\">Tucson</option>\r\n                    </Input>\r\n                  </FormGroup>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col>\r\n                  <FormGroup>\r\n                    <Label for=\"studentFunding\">Funding Source</Label>\r\n                    <Input type=\"select\" name=\"studentFunding\" id=\"studentFunding\">\r\n                      <option></option>\r\n                      <option value=\"1\">ESA</option>\r\n                      <option value=\"2\">District</option>\r\n                      <option value=\"3\">Private Pay</option>\r\n                      <option value=\"4\">Scholarship</option>\r\n                    </Input>\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col>\r\n                  <FormGroup>\r\n                    <Label for=\"studentInstructionMode\">Instruction Mode</Label>\r\n                    <Input type=\"select\" name=\"studentInstructionMode\" id=\"studentInstructionMode\">\r\n                      <option></option>\r\n                      <option value=\"1\">Ground</option>\r\n                      <option value=\"2\">Home</option>\r\n                      <option value=\"3\">Virtual</option>\r\n                      <option value=\"4\">Campus/Home</option>\r\n                      <option value=\"5\">Campus/Virtual</option>\r\n                      <option value=\"6\">Home/Virtual</option>\r\n                    </Input>\r\n                  </FormGroup>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col>\r\n                  <FormGroup>\r\n                    <Label for=\"previousSchools\">Previous School(s)</Label>\r\n                    <Input\r\n                      type=\"text\"\r\n                      name=\"previousSchools\"\r\n                      id=\"previousSchools\"\r\n                    />\r\n                  </FormGroup>\r\n                </Col>\r\n              </Row>\r\n              <Container>\r\n                <Row>\r\n                  <Col>\r\n                    <h3>Medical</h3>\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col>\r\n                    <FormGroup>\r\n                      <Label for=\"hearingLimitations\">Hearing</Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"hearingLimitations\"\r\n                        id=\"hearingLimitations\"\r\n                      />\r\n                    </FormGroup>\r\n                  </Col>\r\n                  <Col>\r\n                    <FormGroup>\r\n                      <Label for=\"visionLimitations\">Vision</Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"visionLimitations\"\r\n                        id=\"visionLimitations\"\r\n                      />\r\n                    </FormGroup>\r\n                  </Col>\r\n                  <Col>\r\n                    <FormGroup>\r\n                      <Label for=\"mobilityLimitations\">Mobility</Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"mobilityLimitations\"\r\n                        id=\"mobilityLimitations\"\r\n                      />\r\n                    </FormGroup>\r\n                  </Col>\r\n                </Row>\r\n              </Container>\r\n              <Row>\r\n                <Col>\r\n                  <FormGroup>\r\n                    <Label for=\"allergies\">Allergies</Label>\r\n                    <Input\r\n                      type=\"text\"\r\n                      name=\"allergies\"\r\n                      id=\"allergies\"\r\n                    />\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col>\r\n                  <FormGroup>\r\n                    <Label for=\"therapies\">Therapies</Label>\r\n                    <Input\r\n                      type=\"text\"\r\n                      name=\"therapies\"\r\n                      id=\"therapies\"\r\n                    />\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col>\r\n                  <FormGroup>\r\n                    <Label for=\"sensitivities\">Sensitivities</Label>\r\n                    <Input\r\n                      type=\"text\"\r\n                      name=\"sensitivities\"\r\n                      id=\"sensitivities\"\r\n                    />\r\n                  </FormGroup>\r\n                </Col>\r\n              </Row>\r\n              <Container>\r\n                <Row>\r\n                  <Col>\r\n                    <h3>Describe your student in the following areas:</h3>\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col>\r\n                    <FormGroup>\r\n                      <Label for=\"social\">Social</Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"social\"\r\n                        id=\"social\"\r\n                      />\r\n                    </FormGroup>\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col>\r\n                    <FormGroup>\r\n                      <Label for=\"emotional\">Emotional</Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"emotional\"\r\n                        id=\"emotional\"\r\n                      />\r\n                    </FormGroup>\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col>\r\n                    <FormGroup>\r\n                      <Label for=\"physical\">Physical</Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"physical\"\r\n                        id=\"physical\"\r\n                      />\r\n                    </FormGroup>\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col>\r\n                    <FormGroup>\r\n                      <Label for=\"math\">Math</Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"math\"\r\n                        id=\"math\"\r\n                      />\r\n                    </FormGroup>\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col>\r\n                    <FormGroup>\r\n                      <Label for=\"reading\">Reading</Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"reading\"\r\n                        id=\"reading\"\r\n                      />\r\n                    </FormGroup>\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col>\r\n                    <FormGroup>\r\n                      <Label for=\"writing\">Writing</Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"writing\"\r\n                        id=\"writing\"\r\n                      />\r\n                    </FormGroup>\r\n                  </Col>\r\n                </Row>\r\n              </Container>\r\n              <Container>\r\n                <Row>\r\n                  <Col>\r\n                    <h3>What are your student's interests?</h3>\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col>\r\n                    <FormGroup>\r\n                      <Label for=\"interests\">Interests</Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"interests\"\r\n                        id=\"interests\"\r\n                      />\r\n                    </FormGroup>\r\n                  </Col>\r\n                </Row>\r\n              </Container>\r\n              <Button\r\n                color=\"primary\"\r\n                onClick={() => {\r\n                  this.createStudent();\r\n                  this.setState({ modal: false })\r\n                }}\r\n              >\r\n                Submit\r\n              </Button>\r\n              <Button\r\n                color=\"danger\"\r\n                onClick={() => this.setState({ modal: false })}\r\n              >\r\n                Cancel\r\n              </Button>\r\n            </Form>\r\n          </ModalBody>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import { Component } from \"react\";\r\nimport { Button, Modal, ModalBody, Form } from \"reactstrap\"; \r\nimport { studentService } from \"../services/studentService\";\r\n  export class DeleteStudent extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        modal: false,\r\n      };\r\n    }\r\n    render() {\r\n      return (\r\n        <div>\r\n          <Button outline color=\"danger\" size=\"sm\" onClick={() => this.setState({ modal: true })}>\r\n            Delete Student\r\n          </Button>\r\n          <Modal isOpen={this.state.modal} toggle={this.toggle}>\r\n            <ModalBody>\r\n              <Form>\r\n                <h2>Are you sure you want to delete {this.props.studentFirstName} {this.props.studentLastName}?</h2>\r\n                <Button\r\n                  outline color=\"primary\"\r\n                  onClick={() => {\r\n                    this.deleteStudent();\r\n                    this.setState({ modal: false });\r\n                  }}\r\n                >\r\n                  Submit\r\n                </Button>\r\n                <Button\r\n                  outline color=\"danger\"\r\n                  onClick={() => this.setState({ modal: false })}\r\n                >\r\n                  Cancel\r\n                </Button>\r\n              </Form>\r\n            </ModalBody>\r\n          </Modal>\r\n        </div>\r\n      );\r\n    }\r\n    deleteStudent(){\r\n      const studentObject = {\r\n        studentID: this.props.studentId\r\n      };\r\n      const student =  studentService.delete(studentObject);\r\n      console.log(student)\r\n    }\r\n  }\r\n\r\n    \r\n    \r\n","import { Component } from \"react\";\r\nimport {\r\n  Form,\r\n  FormGroup,\r\n  Input,\r\n  Label,\r\n  Button,\r\n  Modal,\r\n  ModalBody,\r\n} from \"reactstrap\";\r\nimport { studentService } from \"../services/studentService\";\r\n\r\nexport class StudentUpdater extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      modal: false,\r\n    };\r\n  }\r\n\r\n  async updateStudent() {\r\n    const studentObject = {\r\n      studentID: this.props.studentId,\r\n      firstName: document.getElementById(\"studentFirstName\").value,\r\n      lastName: document.getElementById(\"studentLastName\").value,\r\n      grade: document.getElementById(\"studentGrade\").value,\r\n      campuses: document.getElementById(\"studentCampus\").value,\r\n      iep: document.getElementById(\"IEP\").value,\r\n      medical_information: document.getElementById(\"medInfo\").value,\r\n      additional_information: document.getElementById(\"addInfo\").value,\r\n      funding: document.getElementById(\"studentFunding\").value,\r\n      instructionmode: document.getElementById(\"studentInstructionMode\").value\r\n    };\r\n    const student = await studentService.update(studentObject);\r\n    console.log(student)\r\n  }\r\n\r\n  toggle() {\r\n    return !this.state.modal;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Button outline color=\"success\" size=\"sm\" onClick={() => this.setState({ modal: true })}>\r\n          Update Student\r\n        </Button>\r\n        <Modal isOpen={this.state.modal} toggle={this.toggle}>\r\n          <ModalBody>\r\n            <Form>\r\n              <FormGroup>\r\n                <Label for=\"studentFirstName\">Student First Name</Label>\r\n                <Input\r\n                  defaultValue={this.props.studentFirstName}\r\n                  type=\"text\"\r\n                  name=\"studentFirstName\"\r\n                  id=\"studentFirstName\"\r\n                />\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Label for=\"studentLastName\">Student Last Name</Label>\r\n                <Input\r\n                  defaultValue={this.props.studentLastName}\r\n                  type=\"text\"\r\n                  name=\"studentLastName\"\r\n                  id=\"studentLastName\"\r\n                />\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Label for=\"studentGrade\">Grade Level</Label>\r\n                <Input type=\"select\" name=\"studentGrade\" id=\"studentGrade\" defaultValue={this.props.studentGrade}>\r\n                  <option>0</option>\r\n                  <option>1</option>\r\n                  <option>2</option>\r\n                  <option>3</option>\r\n                  <option>4</option>\r\n                  <option>5</option>\r\n                  <option>6</option>\r\n                  <option>7</option>\r\n                  <option>8</option>\r\n                  <option>9</option>\r\n                  <option>10</option>\r\n                  <option>11</option>\r\n                  <option>12</option>\r\n                </Input>\r\n              </FormGroup>\r\n              <FormGroup check>\r\n                <Label check>\r\n                  <Input id=\"IEP\" type=\"checkbox\" defaultValue={this.props.studentIEP}/> IEP\r\n                </Label>\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Label for=\"studentCampus\">Student Campus</Label>\r\n                <Input type=\"select\" name=\"studentCampus\" id=\"studentCampus\" defaultValue={this.props.studentCampus}>\r\n                  <option value=\"1\">Tempe</option>\r\n                  <option value=\"2\">Queen Creek</option>\r\n                  <option value=\"3\">Litchfield Park</option>\r\n                  <option value=\"4\">Scottsdale</option>\r\n                  <option value=\"5\">Tucson</option>\r\n                </Input>\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Label for=\"medInfo\">Medical Information</Label>\r\n                <Input\r\n                  defaultValue={this.props.studentMedInfo}\r\n                  type=\"text\"\r\n                  name=\"medInfo\"\r\n                  id=\"medInfo\"\r\n                />\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Label for=\"addInfo\">Additional Information</Label>\r\n                <Input\r\n                  defaultValue={this.props.studentAddInfo}\r\n                  type=\"text\"\r\n                  name=\"addInfo\"\r\n                  id=\"addInfo\"\r\n                />\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Label for=\"studentFunding\">Funding Source</Label>\r\n                <Input \r\n                type=\"select\" \r\n                name=\"studentFunding\" \r\n                id=\"studentFunding\"\r\n                defaultValue={this.props.studentFunding}>\r\n                  <option></option>\r\n                  <option value=\"1\">ESA</option>\r\n                  <option value=\"2\">District</option>\r\n                  <option value=\"3\">Private Pay</option>\r\n                  <option value=\"4\">Scholarship</option>\r\n                </Input>\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Label for=\"studentInstructionMode\">Instruction Mode</Label>\r\n                <Input \r\n                type=\"select\" \r\n                name=\"studentInstructionMode\" \r\n                id=\"studentInstructionMode\"\r\n                defaultValue={this.props.studentInstructionMode}>\r\n                  <option></option>\r\n                  <option value=\"1\">Ground</option>\r\n                  <option value=\"2\">Home</option>\r\n                  <option value=\"3\">Virtual</option>\r\n                  <option value=\"4\">Campus/Home</option>\r\n                  <option value=\"5\">Campus/Virtual</option>\r\n                  <option value=\"6\">Home/Virtual</option>\r\n                </Input>\r\n              </FormGroup>\r\n              <Button\r\n                color=\"primary\"\r\n                onClick={() => {\r\n                  this.updateStudent();\r\n                  this.setState({ modal: false })\r\n                }}\r\n              >\r\n                Submit\r\n              </Button>\r\n              <Button\r\n                color=\"danger\"\r\n                onClick={() => this.setState({ modal: false })}\r\n              >\r\n                Cancel\r\n              </Button>\r\n            </Form>\r\n          </ModalBody>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport {baseURL} from \"../baseURL\";\r\nimport { Table, NavLink } from \"reactstrap\";\r\n\r\n\r\n\r\nexport default class AltStudentSchedule extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { studentschedule: [], studentsched: []};\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch(`${baseURL}/schedules`) //Fetch StudentSchedule Table from API\r\n      .then((response) => response.json()) //Convert response to a JSON object\r\n      .then((data) => {\r\n        this.setState({\r\n          studentschedule: data,                   //Create relationship between studentschedule state array and JSON object\r\n        });\r\n      });\r\n  }\r\n\r\n  setSchedule(studentsched) {\r\n    this.setState({studentsched: studentsched})\r\n    // this.setState({student: studentsched.students})       //sets studentsched property to studentsched object.  This looks funny because they both are named studentsched\r\n  }\r\n\r\n\r\n  render() {\r\n    const student = this.props.student;\r\n    const schedBox = this.state.studentschedule\r\n      .filter(studentschedule => studentschedule.student?.id === student.id)\r\n      .sort((a, b) => (a.student?.firstName > b.student?.firstName) ? 1 : (a.student?.firstName === b.student?.firstName) ? ((a.period > b.period) ? 1 : -1) : -1)\r\n      .map(studentsched => {\r\n        return (\r\n            <Table key={studentsched.id}>\r\n                <thead>\r\n                    <tr>\r\n                        <th>Period {studentsched.period}</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <td id={`${studentsched.teacher.firstName}`}>\r\n                          <strong>Teacher:</strong> <p style={{fontSize: 'small'}}>{studentsched.teacher.firstName} {studentsched.teacher.lastName}</p> \r\n                          <strong>Course:</strong> <p style={{fontSize: 'small'}}>{studentsched.course.name}</p>\r\n                          <NavLink href={studentsched.teacher?.link}>Virtual</NavLink>\r\n                          </td>\r\n                    </tr>\r\n                </tbody>\r\n            </Table>\r\n        )\r\n      });\r\n\r\n      return (\r\n        <div id=\"schedBox\" >\r\n        \r\n          StudentSchedule for {student.firstName} {student.lastName}\r\n          <div className = \"schedule-container\">\r\n            {schedBox}\r\n          </div>\r\n          \r\n        </div>\r\n    )\r\n  }\r\n\r\n}\r\n","import {baseURL} from \"../baseURL\";\r\n\r\nclass ScheduleService {\r\n    async all () {\r\n        const response = await fetch(`${baseURL}/schedules`, {\r\n            method: \"GET\",\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n          });\r\n          return await response.json();\r\n    };\r\n    async create(scheduleObject) {\r\n        const response = await fetch(`${baseURL}/schedules`, {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify(scheduleObject),\r\n        });\r\n        return await response.json();\r\n    };\r\n    async delete(scheduleObject){\r\n        console.log(scheduleObject)\r\n        const response = await fetch(`${baseURL}/schedules/`+scheduleObject.scheduleId, {\r\n            method: \"DELETE\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n        })\r\n        return response;\r\n    };\r\n    async update(scheduleObject) {\r\n        console.log(scheduleObject)\r\n        const response = await fetch(`${baseURL}/schedules/`+scheduleObject.id, {\r\n            method: \"PUT\",\r\n            headers: {\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(scheduleObject),\r\n    });\r\n        const data = response;\r\n        console.log(data);\r\n    }\r\n}\r\n\r\nexport const scheduleService = new ScheduleService();","import { Component } from \"react\";\r\nimport {\r\n  Button,\r\n} from \"reactstrap\";\r\nimport { scheduleService } from \"../services/scheduleService\";\r\n\r\nexport class EmptyScheduleCreator extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n    };\r\n  }\r\n\r\n  async emptySchedule() {\r\n    for(let i=1; i < 11; i++) {\r\n    const scheduleObject = {\r\n      student: this.props.studentId,\r\n      period:i, \r\n      teacher: 13, \r\n      course: 15, \r\n      campus: this.props.campusId\r\n      \r\n    };\r\n    console.log(scheduleObject.student)\r\n    \r\n    const schedule = await scheduleService.create(scheduleObject);\r\n    console.log(schedule)}\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Button outline color=\"primary\" size=\"sm\" onClick={() => this.emptySchedule()}>\r\n          Add Schedule\r\n        </Button>\r\n    </div>\r\n    )}\r\n}","import {baseURL} from \"../baseURL\";\r\n\r\nclass GuardianService {\r\n    async all () {\r\n        const response = await fetch(`${baseURL}/guardians`, {\r\n            method: \"GET\",\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n          });\r\n          return await response.json();\r\n    };\r\n    async create (guardianObject) {\r\n        const response = await fetch(`${baseURL}/guardians`, {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify(guardianObject),\r\n        });\r\n        return await response.json();\r\n    };\r\n    async delete(guardianObject){\r\n        console.log(guardianObject)\r\n        const response = fetch(`${baseURL}/guardians/`+guardianObject.guardianID, {\r\n            method: \"DELETE\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n        })\r\n        return response;\r\n    };\r\n    async update(guardianObject) {\r\n        const response = fetch(`${baseURL}/guardians/`+guardianObject.guardianID, {\r\n            method: \"PUT\",\r\n            headers: {\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(guardianObject),\r\n    });\r\n        const data = response;\r\n        console.log(data);\r\n    }\r\n}\r\n\r\nexport const guardianService = new GuardianService();","import { Component } from \"react\";\r\nimport {baseURL} from \"../baseURL\";\r\nimport {\r\n  Form,\r\n  FormGroup,\r\n  Input,\r\n  Label,\r\n  Button,\r\n  Modal,\r\n  ModalBody,\r\n} from \"reactstrap\";\r\nimport { guardianService } from \"../services/guardianService\";\r\n\r\n\r\nexport class GuardianCreator extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      modal: false,\r\n    };\r\n  }\r\n\r\n  async createGuardian() {\r\n    const guardianObject = {\r\n      student: this.props.studentId,\r\n      firstName: document.getElementById(\"guardianFirstName\").value,\r\n      lastName: document.getElementById(\"guardianLastName\").value,\r\n      phone: document.getElementById(\"guardianPhone\").value,\r\n      email: document.getElementById(\"guardianEmail\").value,\r\n      address: document.getElementById(\"guardianAddress\").value,\r\n      additional_info: document.getElementById(\"guardianAdditionalInfo\").value\r\n    };\r\n    const guardian = await guardianService.create(guardianObject);\r\n    fetch(`${baseURL}/spedQuestions`)\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      this.setState({\r\n        guardians: data,\r\n      });\r\n    });\r\n    console.log(guardian);\r\n  }\r\n\r\n  toggle() {\r\n    return !this.state.modal;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Button outline color=\"primary\" onClick={() => this.setState({ modal: true })}>\r\n          Add Guardian\r\n        </Button>\r\n        <Modal isOpen={this.state.modal} toggle={this.toggle}>\r\n          <ModalBody>\r\n            <Form>\r\n              <FormGroup>\r\n                <Label for=\"guardianFirstName\">Guardian First Name</Label>\r\n                <Input\r\n                  type=\"text\"\r\n                  name=\"guardianFirstName\"\r\n                  id=\"guardianFirstName\"\r\n                />\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Label for=\"guardianLastName\">Guardian Last Name</Label>\r\n                <Input\r\n                  type=\"text\"\r\n                  name=\"guardianLastName\"\r\n                  id=\"guardianLastName\"\r\n                />\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Label for=\"guardianPhone\">Phone</Label>\r\n                <Input type=\"text\" name=\"guardianPhone\" id=\"guardianPhone\">\r\n                </Input>\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Label for=\"guardianEmail\">Email</Label>\r\n                <Input type=\"email\" name=\"guardianEmail\" id=\"guardianEmail\">\r\n                </Input>\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Label for=\"guardianAddress\">Address</Label>\r\n                <Input type=\"text\" name=\"guardianAddress\" id=\"guardianAddress\">\r\n                </Input>\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Label for=\"guardianAdditionalInfo\">Additional Info</Label>\r\n                <Input type=\"text\" name=\"guardianAdditionalInfo\" id=\"guardianAdditionalInfo\">\r\n                </Input>\r\n              </FormGroup>\r\n              <Button\r\n                color=\"primary\"\r\n                onClick={() => {\r\n                  this.createGuardian();\r\n                  this.setState({ modal: false })\r\n                }}\r\n              >\r\n                Submit\r\n              </Button>\r\n              <Button\r\n                color=\"danger\"\r\n                onClick={() => this.setState({ modal: false })}\r\n              >\r\n                Cancel\r\n              </Button>\r\n            </Form>\r\n          </ModalBody>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import {baseURL} from \"../baseURL\";\r\n\r\nclass SpedQuestionService {\r\n    async all () {\r\n        const response = await fetch(`${baseURL}/spedQuestions`, {\r\n            method: \"GET\",\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n          });\r\n          return await response.json();\r\n    };\r\n    async create (spedQuestionObject) {\r\n        const response = await fetch(`${baseURL}/spedQuestions`, {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify(spedQuestionObject),\r\n        });\r\n        return await response.json();\r\n    };\r\n    async delete(spedQuestionObject){\r\n        console.log(spedQuestionObject)\r\n        const response = fetch(`${baseURL}/spedQuestions/`+spedQuestionObject.spedQuestionId, {\r\n            method: \"DELETE\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n        })\r\n        return response;\r\n    };\r\n    async update(spedQuestionObject) {\r\n        console.log(spedQuestionObject)\r\n        const response = await fetch(`${baseURL}/spedQuestions/`+spedQuestionObject.id, {\r\n            method: \"PUT\",\r\n            headers: {\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(spedQuestionObject),\r\n    });\r\n        const data = response;\r\n        console.log(data);\r\n    }\r\n}\r\n\r\nexport const spedQuestionService = new SpedQuestionService();","import { Component } from \"react\";\r\nimport {baseURL} from \"../baseURL\";\r\nimport {\r\n  Form,\r\n  FormGroup,\r\n  Input,\r\n  Label,\r\n  Button,\r\n  Modal,\r\n  ModalBody,\r\n} from \"reactstrap\";\r\nimport { spedQuestionService } from \"../services/spedQuestionService\";\r\n\r\n\r\nexport class SpedQuestionCreator extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      modal: false,\r\n    };\r\n  }\r\n\r\n  async createSpedQuestion() {\r\n    const spedQuestionObject = {\r\n      date: document.getElementById(\"spedQuestionDate\").value,\r\n      question: document.getElementById(\"spedQuestionQuestion\").value,\r\n      category: document.getElementById(\"spedQuestionCategory\").value,\r\n      student: this.props.studentId,\r\n    };\r\n    const spedQuestion = await spedQuestionService.create(spedQuestionObject);\r\n    fetch(`${baseURL}/spedQuestions`)\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      this.setState({\r\n        spedQuestion: data,\r\n      });\r\n    });\r\n    console.log(spedQuestion);\r\n  }\r\n\r\n  toggle() {\r\n    return !this.state.modal;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Button outline color=\"success\" onClick={() => this.setState({ modal: true })}>\r\n          Create IEP Question\r\n        </Button>\r\n        <Modal isOpen={this.state.modal} toggle={this.toggle}>\r\n          <ModalBody>\r\n            <Form>\r\n              <FormGroup>\r\n                <Label for=\"spedQuestionDate\">Date</Label>\r\n                <Input\r\n                  type=\"date\"\r\n                  name=\"spedQuestionDate\"\r\n                  id=\"spedQuestionDate\"\r\n                />\r\n              </FormGroup>\r\n              <FormGroup check>\r\n                  <Label check>Category</Label>\r\n                    <Input \r\n                    type=\"select\"\r\n                    id=\"spedQuestionCategory\">\r\n                      <option></option>\r\n                      <option>ELA</option>\r\n                      <option>Math</option>\r\n                      <option>Social</option>\r\n                    </Input>\r\n                </FormGroup>\r\n              <FormGroup>\r\n                <Label for=\"spedQuestionQuestion\">Question</Label>\r\n                <Input\r\n                  type=\"text\"\r\n                  name=\"spedQuestionQuestion\"\r\n                  id=\"spedQuestionQuestion\"\r\n                />\r\n              </FormGroup>\r\n              <Button\r\n                color=\"primary\"\r\n                onClick={() => {\r\n                  this.createSpedQuestion();\r\n                  this.setState({ modal: false })\r\n                }}\r\n              >\r\n                Submit\r\n              </Button>\r\n              <Button\r\n                color=\"danger\"\r\n                onClick={() => this.setState({ modal: false })}\r\n              >\r\n                Cancel\r\n              </Button>\r\n            </Form>\r\n          </ModalBody>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport {baseURL} from \"../baseURL\";\r\nimport { Card, Row, Col, CardImg, CardBody, Label, Container } from \"reactstrap\";\r\nimport {StudentCreator} from \"./CreateStudent\";\r\nimport {DeleteStudent} from \"./DeleteStudent\";\r\nimport {StudentUpdater} from \"./UpdateStudent\";\r\nimport AltStudentSchedule from \"./AltStudentSchedule\";\r\nimport { EmptyScheduleCreator } from \"./EmptySchedule\";\r\nimport { GuardianCreator } from \"./CreateGuardian\";\r\nimport { SpedQuestionCreator } from \"./CreateSpedQuestion\";\r\n\r\n\r\nexport default class Student extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { students: [], student: null, id: null};\r\n  }\r\n\r\n  componentDidMount() {\r\n    // Fetch Student Table from API\r\n    fetch(`${baseURL}/students`)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        this.setState({\r\n          students: data,\r\n        });\r\n      });\r\n  }\r\n\r\n  onChange = e => {\r\n    const studentId = Number(e.target.value)\r\n    const student = this.state.students.find(student => student.id === studentId) \r\n    this.setState({ student });\r\n    console.log(this.state)\r\n    console.log(e.target.value)\r\n  }\r\n  \r\n  render() {\r\n    const first = this.state.student?.firstName;\r\n    const last = this.state.student?.lastName;\r\n    return (\r\n      <Container>\r\n        <Row>\r\n          <Col>\r\n            <Label for=\"scheduleStudent\">Select Student</Label>\r\n            <select id=\"scheduleStudent\" onChange={this.onChange}>\r\n              <option selected>None</option>\r\n              {this.state.students.map(student => \r\n                <option key={student.id} value={student.id}>\r\n                  {student.firstName} {student.lastName}\r\n                </option>\r\n              )}\r\n            </select>\r\n          </Col>\r\n          <Col>\r\n            <StudentCreator></StudentCreator>\r\n          </Col>\r\n        </Row>\r\n        <h1>Student: {first} {last}</h1>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-3\">\r\n            <Card body outline color=\"primary\">\r\n              {this.state.student && <CardImg src={`${this.state.student?.profile_image}`} alt={`${this.state.student?.firstName}`}></CardImg>}\r\n              {this.state.student &&<CardBody>\r\n                <p><strong>Campus:</strong> {this.state.student.campuses.name}</p>\r\n                <p><strong>Grade:</strong> {this.state.student.grade}</p>\r\n                <p><strong>Additional Information:</strong> {this.state.student.additional_information}</p>\r\n                <Row>\r\n                <Col md=\"4\">\r\n                  <DeleteStudent \r\n                    studentId={this.state.student?.id}\r\n                    studentFirstName={this.state.student?.firstName}\r\n                    studentLastName={this.state.student?.lastName}>\r\n                  </DeleteStudent>\r\n                </Col>\r\n                <Col md=\"4\">\r\n                  <StudentUpdater \r\n                    studentId={this.state.student?.id}\r\n                    studentFirstName={this.state.student?.firstName}\r\n                    studentLastName={this.state.student?.lastName}\r\n                    studentGrade={this.state.student?.grade}\r\n                    studentCampus={this.state.student?.campuses?.id}\r\n                    studentMedInfo={this.state.student?.medical_information}\r\n                    studentAddInfo={this.state.student?.additional_information}\r\n                    studentIEP={this.state.student?.iep}\r\n                    studentFunding={this.state.student?.funding?.id}\r\n                    studentInstructionMode={this.state.student?.instructionmode?.id}>\r\n                  </StudentUpdater>\r\n                </Col>\r\n                <Col md=\"4\">\r\n                  <EmptyScheduleCreator \r\n                    studentId={this.state.student?.id}\r\n                    studentFirstName={this.state.student?.firstName}\r\n                    studentLastName={this.state.student?.lastName}\r\n                    campusId={this.state.student?.campuses.id}>\r\n                  </EmptyScheduleCreator>\r\n                </Col>\r\n                </Row>\r\n                <GuardianCreator\r\n                  studentId={this.state.student?.id}\r\n                >\r\n                </GuardianCreator>\r\n                <SpedQuestionCreator\r\n                  studentId={this.state.student?.id}\r\n                >\r\n                </SpedQuestionCreator>\r\n        \r\n              </CardBody>}\r\n            </Card>\r\n          </div>\r\n          <div className=\"col-md-9\">\r\n            {this.state.student && <AltStudentSchedule student={this.state.student}></AltStudentSchedule>}\r\n          </div>\r\n        </div>\r\n        \r\n      </Container>\r\n    );\r\n  }\r\n}\r\n","import { Component } from 'react';\r\n\r\nclass Home extends Component {\r\n    render() {\r\n        return(\r\n            <img src=\"https://qyctrtcwtwasdktftmuy.supabase.co/storage/v1/object/sign/images/Aspire-Owl.gif?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1cmwiOiJpbWFnZXMvQXNwaXJlLU93bC5naWYiLCJpYXQiOjE2MTg3NzMwNDksImV4cCI6MTkzNDEzMzA0OX0.Rz17BSP_eY9jSZYbevGMPXdQbH7G24PkrdZf-zf-zrQ\" height=\"500\" alt=\"Mr. Hootsworth\" class=\"center\" />\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home","import {baseURL} from \"../baseURL\";\r\n\r\nclass GradebookService {\r\n    async all () {\r\n        const response = await fetch(`${baseURL}/gradebooks`, {\r\n            method: \"GET\",\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n          });\r\n          return await response.json();\r\n    };\r\n    async create (gradebookObject) {\r\n        const response = await fetch(`${baseURL}/gradebooks`, {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify(gradebookObject),\r\n        });\r\n        return await response.json();\r\n    };\r\n    async delete(gradebookObject){\r\n        console.log(gradebookObject)\r\n        const response = fetch(`${baseURL}/gradebooks/`+gradebookObject.gradebookId, {\r\n            method: \"DELETE\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n        })\r\n        return response;\r\n    };\r\n    async update(gradebookObject) {\r\n        console.log(gradebookObject)\r\n        const response = fetch(`${baseURL}/gradebooks/`+gradebookObject.id, {\r\n            method: \"PUT\",\r\n            headers: {\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(gradebookObject),\r\n    });\r\n        const data = response;\r\n        console.log(data);\r\n    }\r\n}\r\n\r\nexport const gradebookService = new GradebookService();","import { Component } from \"react\";\r\nimport {\r\n  Form,\r\n  FormGroup,\r\n  Input,\r\n  Label,\r\n  Button,\r\n  Modal,\r\n  ModalBody,\r\n} from \"reactstrap\";\r\nimport { gradebookService } from \"../services/gradebookService\";\r\n\r\nexport class GradebookCreator extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      modal: false,\r\n    };\r\n  }\r\n\r\n  async createGradebook() {\r\n    const gradebookObject = {\r\n      students: this.props.student.id,\r\n      teachers: this.props.teacher.id,\r\n      schedule: this.props.id,\r\n      courses: this.props.course.id,\r\n      campus: this.props.campus.id,\r\n      period: this.props.period,\r\n      pointsEarned: document.getElementById(\"pointsEarned\").value,\r\n      pointsAvailable: document.getElementById(\"pointsAvailable\").value,\r\n      assignmentDate: Date.now(),\r\n      name: document.getElementById(\"name\").value,\r\n    };\r\n    const gradebook = await gradebookService.create(gradebookObject);\r\n    console.log(gradebook);\r\n  }\r\n\r\n  toggle() {\r\n    return !this.state.modal;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Button color=\"link\" onClick={() => this.setState({ modal: true })}>\r\n          Gradebook\r\n        </Button>\r\n        <Modal isOpen={this.state.modal} toggle={() => this.toggle()}>\r\n          <ModalBody\r\n            id=\"fancy-cursor\"\r\n            style={{\r\n              backgroundColor: \"lightgray\",\r\n              color: \"black\",\r\n              fontSize: \"21px\",\r\n              textAlign: \"center\",\r\n            }}\r\n          >\r\n            <p>\r\n              <strong>Student: </strong>\r\n              {this.props.student.firstName} {this.props.student.lastName}\r\n            </p>\r\n            <p>\r\n              <strong>Teacher: </strong>\r\n              {this.props.teacher.firstName} {this.props.teacher.lastName}\r\n            </p>\r\n            <p>\r\n              <strong>Course: </strong>\r\n              {this.props.course.name}\r\n            </p>\r\n            <p>\r\n              <strong>Period: </strong>\r\n              {this.props.period}\r\n            </p>\r\n            <Form className=\"fancy-cursor\">\r\n              <FormGroup id=\"trackerBox\">\r\n                <Label for=\"name\">\r\n                  <h3>Assignment Name</h3>\r\n                </Label>\r\n                <Input\r\n                  type=\"text\"\r\n                  name=\"name\"\r\n                  id=\"name\"\r\n                  className=\"fancy-cursor\"\r\n                ></Input>\r\n              </FormGroup>\r\n              <FormGroup id=\"trackerBox\">\r\n                <Label for=\"pointsEarned\">\r\n                  <h3>Points Earned</h3>\r\n                </Label>\r\n                <Input\r\n                  type=\"number\"\r\n                  name=\"pointsEarned\"\r\n                  id=\"pointsEarned\"\r\n                  className=\"fancy-cursor\"\r\n                ></Input>\r\n              </FormGroup>\r\n              <FormGroup id=\"trackerBox\">\r\n                <Label for=\"pointsAvailable\">\r\n                  <h3>Points Available</h3>\r\n                </Label>\r\n                <Input\r\n                  type=\"number\"\r\n                  name=\"pointsAvailable\"\r\n                  id=\"pointsAvailable\"\r\n                  className=\"fancy-cursor\"\r\n                />\r\n              </FormGroup>\r\n              <Button\r\n                color=\"primary\"\r\n                onClick={() => {\r\n                  this.createGradebook();\r\n                  this.setState({ modal: false });\r\n                }}\r\n              >\r\n                Submit\r\n              </Button>\r\n              <Button\r\n                color=\"danger\"\r\n                onClick={() => this.setState({ modal: false })}\r\n              >\r\n                Cancel\r\n              </Button>\r\n            </Form>\r\n          </ModalBody>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import {baseURL} from \"../baseURL\";\r\n\r\nclass TrackerService {\r\n    async create (trackerObject) {\r\n        const response = await fetch(`${baseURL}/trackers`, {\r\n            method: \"POST\",\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify(trackerObject),\r\n          });\r\n          return await response.json();\r\n    }\r\n}\r\n\r\nexport const trackerService = new TrackerService();","import {baseURL} from \"../baseURL\";\r\n\r\nclass SpedResponseService {\r\n    async all () {\r\n        const response = await fetch(`${baseURL}/spedResponses`, {\r\n            method: \"GET\",\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n          });\r\n          return await response.json();\r\n    };\r\n    async create (spedResponseObject) {\r\n        const response = await fetch(`${baseURL}/spedResponses`, {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify(spedResponseObject),\r\n        });\r\n        return await response.json();\r\n    };\r\n    async delete(spedResponseObject){\r\n        console.log(spedResponseObject)\r\n        const response = fetch(`${baseURL}/spedResponses/`+spedResponseObject.spedResponseId, {\r\n            method: \"DELETE\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n        })\r\n        return response;\r\n    };\r\n    async update(spedResponseObject) {\r\n        console.log(spedResponseObject)\r\n        const response = fetch(`${baseURL}/spedResponses/`+spedResponseObject.spedResponseId, {\r\n            method: \"PUT\",\r\n            headers: {\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(spedResponseObject),\r\n    });\r\n        const data = response;\r\n        console.log(data);\r\n    }\r\n}\r\n\r\nexport const spedResponseService = new SpedResponseService();","import { Component } from \"react\";\r\nimport {baseURL} from \"../baseURL\";\r\nimport {\r\n  Form,\r\n  FormGroup,\r\n  Input,\r\n  Label,\r\n  Button,\r\n  Modal,\r\n  ModalBody,\r\n  Row,\r\n  Col,\r\n  Container\r\n} from \"reactstrap\";\r\nimport { trackerService } from \"../services/trackerService\";\r\nimport { spedResponseService } from \"../services/spedResponseService\";\r\n\r\nexport class TrackerCreator extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      modal: false,\r\n      spedQuestions:[]\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch(`${baseURL}/spedQuestions`)\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      this.setState({\r\n        spedQuestions: data.filter(datas => datas.student.id === this.props.student.id),\r\n      });\r\n    });\r\n  }\r\n\r\n  async createTracker() {\r\n    const trackerObject = {\r\n      students: this.props.student.id,\r\n      teachers: this.props.teacher.id,\r\n      courses: this.props.course.id,\r\n      period: this.props.period,\r\n      date: document.getElementById(\"spedResponseDate\").value,\r\n      attendance: document.getElementById(\"attendance\").value,\r\n      lesson: document.getElementById(\"lesson\").value,\r\n      comprehension: document.getElementById(\"comprehension\").value,\r\n      comprehensionAI: document.getElementById(\"comprehensionAI\").value,\r\n      comprehensionComment: document.getElementById(\"comprehensionComment\").value,\r\n      engagement: document.getElementById(\"engagement\").value,\r\n      engagementAI:document.getElementById(\"engagementAI\").value,\r\n      engagementComment: document.getElementById(\"engagementComment\").value,\r\n      behavior: document.getElementById(\"behavior\").value,\r\n      behaviorAI: document.getElementById(\"behaviorAI\").value,\r\n      behaviorComment: document.getElementById(\"behaviorComment\").value,\r\n      assessment: document.getElementById(\"assessment\").value,\r\n    };\r\n    const tracker = await trackerService.create(trackerObject);\r\n    console.log(tracker)\r\n  }\r\n\r\n  async createSpedResponse(i) {\r\n    const spedResponseObject = {\r\n      date: document.getElementById(\"spedResponseDate\").value,\r\n      question: i.question,\r\n      meet: document.getElementById(\"spedResponseMeet\"+i.id).value,\r\n      success: document.getElementById(\"spedResponseSuccess\"+i.id).value,\r\n      opportunity: document.getElementById(\"spedResponseOpportunity\"+i.id).value,\r\n      response: document.getElementById(\"spedResponseResponse\"+i.id).value,\r\n      students: this.props.student,\r\n      spedQuestions: i.id\r\n    };\r\n    const spedResponse = await spedResponseService.create(spedResponseObject);\r\n    fetch({baseURL}+\"/spedResponses\")\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      this.setState({\r\n        spedResponse: data,\r\n      });\r\n    });\r\n    console.log(spedResponse);\r\n  }\r\n\r\n  createSpedResponseNinja() {this.state.spedQuestions.forEach((scheduleQuestion =>\r\n    this.createSpedResponse(scheduleQuestion)))}\r\n\r\n  toggle() {\r\n    return !this.state.modal;\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Button\r\n          color=\"link\"\r\n          onClick={() => this.setState({ modal: true })}\r\n        >\r\n          Student Tracking\r\n        </Button>\r\n        <Modal isOpen={this.state.modal} toggle={() => this.toggle()}>\r\n          <ModalBody id=\"fancy-cursor\" style={{ backgroundColor: \"lightgray\", color: 'black', fontSize: '21px', textAlign: 'center'}}>\r\n            <p>\r\n              <strong>Student: </strong>\r\n              {this.props.student.firstName} {this.props.student.lastName}\r\n            </p>\r\n            <p>\r\n              <strong>Teacher: </strong>\r\n              {this.props.teacher.firstName} {this.props.teacher.lastName}\r\n            </p>\r\n            <p>\r\n              <strong>Course: </strong>\r\n              {this.props.course.name}\r\n            </p>\r\n            <p>\r\n              <strong>Period: </strong>\r\n              {this.props.period}\r\n            </p>\r\n            \r\n            <Form className=\"fancy-cursor\">\r\n            <FormGroup>\r\n                <Label for=\"spedResponseDate\">Date</Label>\r\n                <Input\r\n                  type=\"date\"\r\n                  name={`spedResponseDate`}\r\n                  id={`spedResponseDate`}\r\n                />\r\n              </FormGroup>\r\n              {this.state.spedQuestions.filter((speQ) => speQ.category === this.props.course.subject || speQ.category === 'Social').map((spedQuestion => \r\n            <div>\r\n              <Container id=\"trackerBox\">\r\n                <FormGroup>\r\n                  <Label for=\"spedResponseQuestion\" id={`spedResponseQuestion${spedQuestion?.id}`} value={spedQuestion?.id}>{spedQuestion.question} </Label>\r\n                </FormGroup>\r\n                <FormGroup check>\r\n                  <Label check>\r\n                  Did {spedQuestion.students?.firstName} meet this goal?\r\n                    <Input \r\n                    type=\"select\"\r\n                    id={`spedResponseMeet${spedQuestion?.id}`}>\r\n                      <option></option>\r\n                      <option value=\"true\">Yes</option>\r\n                      <option value=\"false\">No</option>\r\n                    </Input>\r\n                  </Label>\r\n                </FormGroup>\r\n                <Row>\r\n                  <Col>\r\n                    <FormGroup>\r\n                      <Label for=\"spedResponseSuccess\">Successes </Label>\r\n                      <Input\r\n                        type=\"number\"\r\n                        id={`spedResponseSuccess${spedQuestion?.id}`}\r\n                      />\r\n                    </FormGroup>\r\n                  </Col>\r\n                  <Col>\r\n                    <FormGroup>\r\n                      <Label for=\"spedResponseOpportunity\">Opportunities </Label>\r\n                      <Input\r\n                        type=\"number\"\r\n                        id={`spedResponseOpportunity${spedQuestion?.id}`}\r\n                      />\r\n                    </FormGroup>\r\n                  </Col>\r\n                </Row>\r\n                <FormGroup>\r\n                  <Label for=\"spedResponseResponse\">Comment </Label>\r\n                  <Input\r\n                    type=\"string\"\r\n                    id={`spedResponseResponse${spedQuestion?.id}`}\r\n                  />\r\n                </FormGroup>\r\n              </Container>\r\n              </div>\r\n              ))}\r\n              <FormGroup id=\"trackerBox\">\r\n                <Label for=\"attendance\">\r\n                  <h3>Attendance</h3>\r\n                </Label>\r\n                <Input type=\"select\" name=\"attendance\" id=\"attendance\" className=\"fancy-cursor\">\r\n                  <option></option>\r\n                  <option>Present</option>\r\n                  <option>Absent</option>\r\n                </Input>\r\n              </FormGroup>\r\n              <FormGroup id=\"trackerBox\">\r\n                <Label for=\"lesson\">\r\n                  <h3>Lesson Description</h3>\r\n                </Label>\r\n                <Input type=\"text\" name=\"lesson\" id=\"lesson\" className=\"fancy-cursor\" />\r\n              </FormGroup>\r\n              <Container style={{ backgroundColor: \"tan\" }} id=\"trackerBox\">\r\n                <h3>Check for Understanding</h3>\r\n                <Row form>\r\n                  <Col md={3}>\r\n                    <FormGroup>\r\n                      <Label for=\"comprehension\">Check for Understanding</Label>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name=\"comprehension\"\r\n                        id=\"comprehension\"\r\n                        className=\"fancy-cursor\"\r\n                      >\r\n                        <option></option>\r\n                        <option value=\"1\">Not Understanding</option>\r\n                        <option value=\"2\">Superficial Understanding</option>\r\n                        <option value=\"3\">Developing</option>\r\n                        <option value=\"4\">Solid Mastery</option>\r\n                      </Input>\r\n                    </FormGroup>\r\n                  </Col>\r\n                  <Col md={9}>\r\n                    <FormGroup>\r\n                      <Label for=\"comprehensionAI\">\r\n                        Check for Understanding Additional Information\r\n                      </Label>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name=\"comprehensionAI\"\r\n                        id=\"comprehensionAI\"\r\n                        className=\"fancy-cursor\"\r\n                        multiple\r\n                      >\r\n                        <option>Requires review of basic content</option>\r\n                        <option>Processing/Memory/Retrieval issues</option>\r\n                        <option>Requires review of current content</option>\r\n                        <option>Requires modifications to content</option>\r\n                        <option>\r\n                          Requires differentiation and infusion to enhance\r\n                          understanding\r\n                        </option>\r\n                        <option>\r\n                          Requires assistance/ support from leadership\r\n                        </option>\r\n                        <option>\r\n                          Requires use of support materials/ tools\r\n                        </option>\r\n                        <option>Reading/ Comprehension issues</option>\r\n                        <option>Specific Learning Disabilities</option>\r\n                        <option>Requires behavioral support</option>\r\n                      </Input>\r\n                    </FormGroup>\r\n                  </Col>\r\n                </Row>\r\n                <FormGroup>\r\n                  <Label for=\"comprehensionComment\">\r\n                    Check for Understanding Comment\r\n                  </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"comprehensionComment\"\r\n                    id=\"comprehensionComment\"\r\n                    className=\"fancy-cursor\"\r\n                  />\r\n                </FormGroup>\r\n              </Container>\r\n              <Container style={{ backgroundColor: \"lightblue\" }} id=\"trackerBox\">\r\n                <h3>Engagement</h3>\r\n                <Row form>\r\n                  <Col md={3}>\r\n                    <FormGroup>\r\n                      <Label for=\"engagement\">Engagement</Label>\r\n                      <Input type=\"select\" name=\"engagement\" id=\"engagement\" className=\"fancy-cursor\">\r\n                        <option></option>\r\n                        <option value=\"1\">\r\n                          Disengaged: No demonstration of learning, disruptive/\r\n                          defiant/ avoidant\r\n                        </option>\r\n                        <option value=\"2\">\r\n                          Retreatism: Little to no effort, productivity or\r\n                          inquiry, interest, or collaboration, no demonstrated\r\n                          inquiry\r\n                        </option>\r\n                        <option value=\"3\">\r\n                          Ritual: Minimal effort to avoid negative consequences,\r\n                          no self-directed/ motivated, minimal inquiry\r\n                        </option>\r\n                        <option value=\"4\">\r\n                          Strategic: Clear effort, focus on directions and task\r\n                          completion to meet standard, minimal inquiry\r\n                        </option>\r\n                        <option value=\"5\">\r\n                          High: Persistent, sustained inquiry, self-directed\r\n                          learning, self motivated, highly engaged in learning\r\n                        </option>\r\n                      </Input>\r\n                    </FormGroup>\r\n                  </Col>\r\n                  <Col md={9}>\r\n                    <FormGroup>\r\n                      <Label for=\"engagementAI\">\r\n                        Engagement Additional Information\r\n                      </Label>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name=\"engagementAI\"\r\n                        id=\"engagementAI\"\r\n                        className=\"fancy-cursor\"\r\n                        multiple\r\n                      >\r\n                        <option>Work refusal</option>\r\n                        <option>Oppositionality</option>\r\n                        <option>Disruptive to others</option>\r\n                        <option>Aggression (verbal)</option>\r\n                        <option>Aggression (physical)</option>\r\n                        <option>\r\n                          Involved in other tasks/ activities/ behaviors\r\n                        </option>\r\n                        <option>Attention seeking behaviors (negative)</option>\r\n                        <option>\r\n                          Self-harm behaviors (verbally or physically)\r\n                        </option>\r\n                        <option>Negative attitude</option>\r\n                        <option>Shut down/ lack of participation</option>\r\n                        <option>Minimal Effort</option>\r\n                        <option>Requires Incentives</option>\r\n                        <option>Not interested in topic/ content</option>\r\n                        <option>Highly interested in topic/ content</option>\r\n                        <option>Emotional Difficulty Anxiety</option>\r\n                        <option>Emotional Difficulty Depression</option>\r\n                        <option>Medical Issue</option>\r\n                        <option>\r\n                          Requires Assistance/ Support from Leadership\r\n                        </option>\r\n                        <option>Requires Behavioral Support</option>\r\n                      </Input>\r\n                    </FormGroup>\r\n                  </Col>\r\n                </Row>\r\n                <FormGroup>\r\n                  <Label for=\"engagementComment\">Engagement Comment</Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"engagementComment\"\r\n                    id=\"engagementComment\"\r\n                    className=\"fancy-cursor\"\r\n                  />\r\n                </FormGroup>\r\n              </Container>\r\n              <Container style={{ backgroundColor: \"gold\" }} id=\"trackerBox\">\r\n                <h3>Behavior/Zone</h3>\r\n                <Row form>\r\n                  <Col md={3}>\r\n                    <FormGroup>\r\n                      <Label for=\"behavior\">Behavior/Zone of Regulation</Label>\r\n                      <Input type=\"select\" name=\"behavior\" id=\"behavior\" className=\"fancy-cursor\">\r\n                        <option></option>\r\n                        <option\r\n                          id=\"zone\"\r\n                          style={{ backgroundColor: \"green\", color:\"white\" }}\r\n                          value=\"1\"\r\n                        >\r\n                          Green Zone (happy, focused, calm, ready to learn)\r\n                        </option>\r\n                        <option\r\n                          id=\"zone\"\r\n                          style={{ backgroundColor: \"orange\" }}\r\n                          value=\"2\"\r\n                        >\r\n                          Yellow Zone (loss of some control, excited,\r\n                          silly/wiggly, frustrated)\r\n                        </option>\r\n                        <option\r\n                          id=\"zone\"\r\n                          style={{ backgroundColor: \"blue\", color:\"white\" }}\r\n                          value=\"3\"\r\n                        >\r\n                          Blue Zone (sad, sick, moving slowly, shut down, tired,\r\n                          anxious)\r\n                        </option>\r\n                        <option\r\n                          id=\"zone\"\r\n                          style={{ backgroundColor: \"red\", color:\"white\" }}\r\n                          value=\"4\"\r\n                        >\r\n                          Red Zone (angry, mad, aggressive verbally/physically)\r\n                        </option>\r\n                      </Input>\r\n                    </FormGroup>\r\n                  </Col>\r\n                  <Col md={9}>\r\n                    <FormGroup>\r\n                      <Label for=\"behaviorAI\">\r\n                        Behavior/Zone Additional Information\r\n                      </Label>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name=\"behaviorAI\"\r\n                        id=\"behaviorAI\"\r\n                        className=\"fancy-cursor\"\r\n                        multiple\r\n                      >\r\n                        <option>Out of seat</option>\r\n                        <option>Loss of Control</option>\r\n                        <option>Talking Out</option>\r\n                        <option>Unfocused</option>\r\n                        <option>Low Attention</option>\r\n                        <option>Sick</option>\r\n                        <option>Sad</option>\r\n                        <option>Head Down</option>\r\n                        <option>Anxious</option>\r\n                        <option>Low attention due to being tired</option>\r\n                        <option>Low communication</option>\r\n                        <option>Physical aggression toward teachers</option>\r\n                        <option>Physical aggression toward peers</option>\r\n                        <option>Verbal aggression toward teachers</option>\r\n                        <option>Verbal aggression toward peers</option>\r\n                        <option>Self-injurious behavior</option>\r\n                        <option>Property Destruction</option>\r\n                      </Input>\r\n                    </FormGroup>\r\n                  </Col>\r\n                </Row>\r\n                <FormGroup>\r\n                  <Label for=\"behaviorComment\">Behavior/Zone Comment</Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"behaviorComment\"\r\n                    id=\"behaviorComment\"\r\n                    className=\"fancy-cursor\"\r\n                  />\r\n                </FormGroup>\r\n              </Container>\r\n              <FormGroup id=\"trackerBox\">\r\n                <Label for=\"assessment\">\r\n                  <h3>Assessment</h3>\r\n                </Label>\r\n                <Input type=\"text\" name=\"assessment\" id=\"assessment\" className=\"fancy-cursor\"/>\r\n              </FormGroup>\r\n              {/* <SpedResponseCreator submitted={this.state.submitted} modal={this.state.modal}\r\n              student={this.props.student.id} ></SpedResponseCreator> */}\r\n              <Button\r\n                color=\"primary\"\r\n                onClick={() => {\r\n                  this.createTracker();\r\n                  this.createSpedResponseNinja();\r\n                  this.setState({ modal: false });\r\n                }}\r\n              >\r\n                Submit\r\n              </Button>\r\n              <Button\r\n                color=\"danger\"\r\n                onClick={() => this.setState({ modal: false })}\r\n              >\r\n                Cancel\r\n              </Button>\r\n            </Form>\r\n          </ModalBody>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import { Component } from \"react\";\r\nimport {\r\n  Button,\r\n  Modal,\r\n  ModalBody,\r\n  Card,\r\n  CardTitle,\r\n  CardBody,\r\n} from \"reactstrap\";\r\n\r\nexport class StudentInfo extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      modal: false,\r\n    };\r\n  }\r\n\r\n  toggle() {\r\n    return !this.state.modal;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Button color=\"link\" onClick={() => this.setState({ modal: true })}>\r\n          Student Info\r\n        </Button>\r\n        <Modal isOpen={this.state.modal} toggle={this.toggle}>\r\n          <ModalBody>\r\n            <Card>\r\n              <CardTitle>\r\n                <h3>{this.props.student.firstName} {this.props.student.lastName}</h3>\r\n              </CardTitle>\r\n              <CardBody>\r\n                <p><strong>Grade:</strong> {this.props.student.grade}</p>\r\n                <p>\r\n                  <strong>Medical Information:</strong> {this.props.student.medical_information}\r\n                </p>\r\n                <p>\r\n                  <strong>Additional Information:</strong>{\" \"}\r\n                  {this.props.student.additional_information}\r\n                </p>\r\n                {this.props.student.guardians.map((guardian) => (\r\n                  <div>\r\n                    <p>\r\n                      <strong>Parent:</strong> {guardian.firstName} {guardian.lastName}\r\n                    </p>\r\n                    <p><strong>Email:</strong> {guardian.email}</p>\r\n                    <p><strong>Phone:</strong> {guardian.phone}</p>\r\n                    <p><strong>Address:</strong> {guardian.address}</p>\r\n                  </div>\r\n                ))}\r\n                <p><strong>Funding:</strong> {this.props.student.funding?.type}</p>\r\n                <p><strong>Instruction Mode:</strong> {this.props.student.instructionmode?.type}</p>\r\n              </CardBody>\r\n            </Card>\r\n            <Button\r\n              color=\"danger\"\r\n              onClick={() => this.setState({ modal: false })}\r\n            >\r\n              Close\r\n            </Button>\r\n          </ModalBody>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport {baseURL} from \"../baseURL\";\r\nimport { Card, CardText, CardTitle, NavLink } from \"reactstrap\";\r\nimport { GradebookCreator } from \"./CreateGradebook\";\r\nimport { TrackerCreator } from \"./CreateTracker\";\r\nimport { StudentInfo } from \"./StudentInfo\";\r\n\r\nexport default class TeacherSchedule extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { teacherschedule: [], teachersched: [], modal: false };\r\n  }\r\n\r\n  componentDidMount(){\r\n    fetch(`${baseURL}/teachers/${this.props.teacher.id}/schedules`) //Fetch TeacherSchedule Table from API\r\n      .then((response) => response.json()) //Convert response to a JSON object\r\n      .then((data) => {\r\n        console.log(data);\r\n        this.setState({\r\n          teacherschedule: data, \r\n        });\r\n      });\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.teacher === this.props.teacher) {\r\n      return;\r\n    }\r\n    console.log(this.props.teacher);\r\n    fetch(`${baseURL}/teachers/${this.props.teacher.id}/schedules`) //Fetch TeacherSchedule Table from API\r\n      .then((response) => response.json()) //Convert response to a JSON object\r\n      .then((data) => {\r\n        console.log(data);\r\n        this.setState({\r\n          teacherschedule: data, //Create relationship between teacherschedule state array and JSON object\r\n        });\r\n      });\r\n  }\r\n\r\n  setSchedule(teachersched) {\r\n    this.setState({ teachersched: teachersched });\r\n    this.setState({ modal: true });\r\n    // this.setState({teacher: teachersched.teachers})       //sets teachersched property to teachersched object.  This looks funny because they both are named teachersched\r\n  }\r\n\r\n  render() {\r\n    const teacher = this.props.teacher;\r\n    const teacherSchedBox = this.state.teacherschedule\r\n      .sort(function (a, b) {\r\n        return a.period - b.period;\r\n      })\r\n      .map((teachersched) => {\r\n        return (\r\n          <div key={teachersched.id} className=\"col\">\r\n            <Card onClick={() => this.setSchedule(teachersched)}>\r\n              <CardTitle>Period: {teachersched.period}</CardTitle>\r\n              <CardText style={{ color: \"black\" }}>\r\n                <p>\r\n                  Student:{teachersched.student.firstName}{\" \"}\r\n                  {teachersched.student.lastName}\r\n                </p>\r\n                <p>\r\n                  Teacher:{this.props.teacher.firstName}{\" \"}\r\n                  {this.props.teacher.lastName}\r\n                </p>\r\n                <p>Course Name:{teachersched.course.name}</p>\r\n                <p>Subject:{teachersched.course.subject}</p>\r\n                <NavLink href={this.props.teacher.link}>Class Link</NavLink>\r\n              </CardText>\r\n              <StudentInfo student={teachersched.student}></StudentInfo>\r\n\r\n              <GradebookCreator\r\n                student={teachersched.student}\r\n                teacher={teachersched.teacher}\r\n                course={teachersched.course}\r\n                period={teachersched.period}\r\n                schedule={teachersched}\r\n                campus={teachersched.campus}\r\n              ></GradebookCreator>\r\n\r\n              <TrackerCreator\r\n                student={teachersched.student}\r\n                teacher={teachersched.teacher}\r\n                course={teachersched.course}\r\n                period={teachersched.period}\r\n              ></TrackerCreator>\r\n            </Card>\r\n          </div>\r\n        );\r\n      });\r\n\r\n    return (\r\n      <div className=\"container\" id=\"schedBox\">\r\n        TeacherSchedule for {teacher.firstName} {teacher.lastName}\r\n        <div className=\"row\">{teacherSchedBox}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport {baseURL} from \"../baseURL\";\r\nimport { Container, Label } from \"reactstrap\";\r\nimport TeacherSchedule from \"./TeacherScheduleComponent\";\r\n\r\n\r\nexport default class Teacher extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { teachers: [], teacher: null };\r\n  }\r\n\r\n  componentDidMount() {\r\n    // Fetch Student Table from API\r\n    fetch(`${baseURL}/teachers`)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        this.setState({\r\n          teachers: data,\r\n        });\r\n      });\r\n  }\r\n\r\n  onChange = e => {\r\n    const teacherId = Number(e.target.value)\r\n    const teacher = this.state.teachers.find(teacher => teacher.id === teacherId) \r\n    this.setState({ teacher });\r\n    console.log(this.state)\r\n    console.log(e.target.value)\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <Container>\r\n        <h1>Teachers {this.state.teacher?.firstName}</h1>\r\n        <div className = \"row\">\r\n          <Label for=\"scheduleTeacher\">Select Teacher</Label>\r\n          <select id=\"scheduleTeacher\" onChange={this.onChange}>\r\n            <option selected>None</option>\r\n            {this.state.teachers.map(teacher => \r\n              <option key={teacher.id} value={teacher.id}>\r\n                {teacher.firstName} {teacher.lastName}\r\n              </option>\r\n            )}\r\n          </select>\r\n        </div>\r\n        {this.state.teacher && <TeacherSchedule teacher={this.state.teacher}></TeacherSchedule>}\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n","import { Component } from \"react\";\r\nimport {baseURL} from \"../baseURL\";\r\nimport {\r\n  Form,\r\n  FormGroup,\r\n  Input,\r\n  Label,\r\n  Button,\r\n  Modal,\r\n  ModalBody,\r\n} from \"reactstrap\";\r\nimport { scheduleService } from \"../services/scheduleService\";\r\n\r\nexport class ScheduleUpdater extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      modal: false,\r\n      teachers: null,\r\n      courses: null,\r\n      name: null\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    // Fetch Student Table from API\r\n    fetch(`${baseURL}/teachers`)\r\n      // Convert response to a JSON object\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        // Create relationship between students state array and JSON object\r\n        this.setState({\r\n          teachers: data,\r\n        });\r\n      });\r\n    fetch(`${baseURL}/courses`)\r\n      // Convert response to a JSON object\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        // Create relationship between students state array and JSON object\r\n        this.setState({\r\n          courses: data,\r\n        });\r\n      });\r\n  }\r\n\r\n  async updateSchedule() {\r\n    const scheduleObject = {\r\n      id: this.props.scheduleId,\r\n      teacher: parseInt(document.getElementById(\"scheduleTeacher\").value),\r\n      course: parseInt(document.getElementById(\"scheduleCourse\").value),\r\n      period: this.props.period\r\n    };\r\n    await scheduleService.update(scheduleObject);\r\n    await this.props.callback()\r\n    this.setState({ modal: false })\r\n  }\r\n\r\n  toggle() {\r\n    return !this.state.modal;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Button \r\n        size=\"sm\"\r\n          color=\"link\"\r\n          onClick={() => this.setState({ modal: true })}\r\n        >\r\n          Update Schedule\r\n        </Button>\r\n        <Modal isOpen={this.state.modal} toggle={this.toggle}>\r\n          <ModalBody>\r\n            <Form>\r\n              <FormGroup>\r\n                <Label for=\"scheduleTeacher\">Select Teacher</Label>\r\n                <Input type=\"select\" id=\"scheduleTeacher\">\r\n                  <option value='13' selected>None</option>\r\n                  {this.state.teachers?.map((teacher) => (\r\n                    <option value={teacher.id}>\r\n                      {teacher.firstName} {teacher.lastName}\r\n                    </option>\r\n                  ))}\r\n                </Input>\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Input type=\"select\" id=\"scheduleCourse\">\r\n                <option value='15' selected>None</option>\r\n                  {this.state.courses?.map((course) => (\r\n                    <option value={course.id}>{course.name}</option>\r\n                  ))}\r\n                </Input>\r\n              </FormGroup>\r\n              <Button\r\n                color=\"primary\"\r\n                onClick={() => {\r\n                  this.updateSchedule();\r\n                }}\r\n              >\r\n                Submit\r\n              </Button>\r\n              <Button\r\n                color=\"danger\"\r\n                onClick={() => this.setState({ modal: false })}\r\n              >\r\n                Cancel\r\n              </Button>\r\n            </Form>\r\n          </ModalBody>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport {baseURL} from \"../baseURL\"\r\nimport { Table } from \"reactstrap\";\r\nimport { ScheduleUpdater } from \"./UpdateSchedule\";\r\n\r\nexport default class Schedule extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { schedules: [], schedule: null, students: [], student: null };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getSchedules()\r\n    console.log(this.props.campus)\r\n  }\r\n\r\n  getSchedules() {\r\n    fetch(`${baseURL}/students`)\r\n      // Convert response to a JSON object\r\n      .then((response) => response.json())\r\n      .then((students) => {\r\n          students.sort((studenta, studentb) => studenta.lastName-studentb.lastName)\r\n          .filter(cstudent => cstudent.campuses.id === this.props.campus?.id)\r\n          .forEach(student => student.schedules.sort((schedulea, scheduleb) => schedulea.period-scheduleb.period))\r\n        this.setState({\r\n          students,\r\n        })\r\n      });\r\n  }\r\n\r\n  setSchedule(schedule) {\r\n    // sets student property to student object.  This looks funny because they both are named student\r\n    this.setState({ schedule: schedule });\r\n    console.log(schedule);\r\n  }\r\n\r\n  releaseKraken() {\r\n    ScheduleUpdater.toggle();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div class=\"tableFixHead\">\r\n        <Table bordered hover size=\"sm\">\r\n          <thead class=\"shadow\">\r\n            <tr>\r\n              <th>\r\n                <h2>Student</h2>\r\n                <br/> <br/>\r\n              </th>\r\n              <th>\r\n                <br/><br/><br/>\r\n                <h2>Period 1</h2>\r\n                <p>7:50-8:40</p>\r\n              </th>\r\n              <th>\r\n                <h3>Period 2</h3>\r\n                <p>8:40-9:30</p>\r\n              </th>\r\n              <th>\r\n                <h3>Period 3</h3>\r\n                <p>9:30-10:20</p>\r\n              </th>\r\n              <th>\r\n                <h3>Period 4</h3>\r\n                <p>10:20-11:10</p>\r\n              </th>\r\n              <th>\r\n                <h3>Period 5</h3>\r\n                <p>11:10-12:00</p>\r\n              </th>\r\n              <th>\r\n                <h3>Period 6</h3>\r\n                <p>12:00-12:50</p>\r\n              </th>\r\n              <th>\r\n                <h3>Period 7</h3>\r\n                <p>12:50-1:40</p>\r\n              </th>\r\n              <th>\r\n                <h3>Period 8</h3>\r\n                <p>1:40-2:30</p>\r\n              </th>\r\n              <th>\r\n                <h3>Period 9</h3>\r\n                <p>2:30-3:20</p>\r\n              </th>\r\n              <th>\r\n                <h3>Period 10</h3>\r\n                <p>3:20-4:10</p>\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {this.state.students.map((student) => (\r\n              <tr>\r\n                <th key={student.id}>{student.firstName} {student.lastName}</th>\r\n                {student.schedules.sort((a, b) => a.period - b.period).map((schedule) => (\r\n                <td className={schedule.teacher.firstName} id=\"schedItem\">\r\n                  <strong>Course: </strong><small>{schedule.course.name}</small> \r\n                  <br /> \r\n                  <strong>Teacher: </strong><small>{schedule.teacher.firstName} {schedule.teacher.lastName}</small> <br />\r\n                  <ScheduleUpdater callback={() => this.getSchedules()} scheduleId={schedule.id} period={schedule.period} ></ScheduleUpdater>\r\n                </td>))}\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { Route, Redirect } from 'react-router-dom'\r\n\r\nimport { useAuth } from '../contexts/Auth'\r\n\r\nexport function PrivateRoute({ component: Component, ...rest }) {\r\n  const { user } = useAuth()\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) => {\r\n        // Renders the page only if `user` is present (user is authenticated)\r\n        // Otherwise, redirect to the login page\r\n        return user ? <Component {...props} /> : <Redirect to=\"/login\" />\r\n      }}\r\n    ></Route>\r\n  )\r\n}","import React, { Component } from \"react\";\r\nimport {baseURL} from \"../baseURL\";\r\nimport { Table } from \"reactstrap\";\r\n\r\nexport default class SpedResponse extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { speds: [], schedule: null, students: [], student: null };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getSchedules()\r\n  }\r\n\r\n  getSchedules() {\r\n    fetch(`${baseURL}/spedResponses`)\r\n      // Convert response to a JSON object\r\n      .then((response) => response.json())\r\n      .then((speds) => {\r\n          speds.sort((speda, spedb) => speda.date-spedb.date)\r\n        this.setState({\r\n          speds,\r\n        })\r\n      });\r\n  }\r\n\r\n  setSped(speds) {\r\n    // sets student property to student object.  This looks funny because they both are named student\r\n    this.setState({ speds: speds });\r\n    console.log(speds);\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div class=\"tableFixHead\">\r\n        <Table bordered hover size=\"sm\">\r\n          <thead class=\"shadow\">\r\n            <tr>\r\n              <th>\r\n                <h3>Date</h3>\r\n              </th>\r\n              <th>\r\n                <h3>Question</h3>\r\n              </th>\r\n              <th>\r\n                <h3>Meet</h3>\r\n              </th>\r\n              <th>\r\n                <h3>Successes</h3>\r\n              </th>\r\n              <th>\r\n                <h3>Opportunities</h3>\r\n              </th>\r\n              <th>\r\n                <h3>Comment</h3>\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {this.state.speds.filter(student => student.students?.id === this.props.student.id).map((sped) => (\r\n              <tr>\r\n                <th key={sped.id}>{sped.date}</th>\r\n                <td>\r\n                  <small>{sped.question}</small>\r\n                </td>\r\n                <td>\r\n                  <small>{sped.meet}</small>\r\n                </td>\r\n                <td>\r\n                  <small>{sped.success}</small>\r\n                </td>\r\n                <td>\r\n                  <small>{sped.opportunity}</small>\r\n                </td>\r\n                <td>\r\n                  <small>{sped.response}</small>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import { Component } from \"react\";\r\nimport {\r\n  Form,\r\n  FormGroup,\r\n  Input,\r\n  Label,\r\n  Button,\r\n  Modal,\r\n  ModalBody,\r\n} from \"reactstrap\";\r\nimport { spedQuestionService } from \"../services/spedQuestionService\";\r\n\r\nexport class SpedQuestionUpdater extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      modal: false,\r\n    };\r\n  }\r\n\r\n  async updateSpedQuestion() {\r\n    const spedQuestionObject = {\r\n        date: document.getElementById(\"spedQuestionDate\").value,\r\n        question: document.getElementById(\"spedQuestionQuestion\").value,\r\n        category: document.getElementById(\"spedQuestionCategory\").value,\r\n        id: this.props.spedQuestionId,\r\n    };\r\n    const spedQuestion = await spedQuestionService.update(spedQuestionObject);\r\n    console.log(spedQuestion)\r\n  }\r\n\r\n  toggle() {\r\n    return !this.state.modal;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Button outline color=\"success\" size=\"sm\" onClick={() => this.setState({ modal: true })}>\r\n          Update Question\r\n        </Button>\r\n        <Modal isOpen={this.state.modal} toggle={this.toggle}>\r\n          <ModalBody>\r\n            <Form>\r\n              <FormGroup>\r\n                <Label for=\"spedQuestionDate\">Date</Label>\r\n                <Input\r\n                  defaultValue={this.props.spedQuestionDate}\r\n                  type=\"date\"\r\n                  name=\"spedQuestionDate\"\r\n                  id=\"spedQuestionDate\"\r\n                />\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Label for=\"spedQuestionQuestion\">Question</Label>\r\n                <Input\r\n                  defaultValue={this.props.spedQuestionQuestion}\r\n                  type=\"text\"\r\n                  name=\"spedQuestionQuestion\"\r\n                  id=\"spedQuestionQuestion\"\r\n                />\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Label for=\"spedQuestionCategory\">Grade Level</Label>\r\n                <Input type=\"select\" name=\"spedQuestionCategory\" id=\"spedQuestionCategory\" defaultValue={this.props.spedQuestionCategory}>\r\n                  <option>ELA</option>\r\n                  <option>Math</option>\r\n                  <option>Social</option>\r\n                </Input>\r\n              </FormGroup>\r\n              <Button\r\n                color=\"primary\"\r\n                onClick={() => {\r\n                  this.updateSpedQuestion();\r\n                  this.setState({ modal: false })\r\n                }}\r\n              >\r\n                Submit\r\n              </Button>\r\n              <Button\r\n                color=\"danger\"\r\n                onClick={() => this.setState({ modal: false })}\r\n              >\r\n                Cancel\r\n              </Button>\r\n            </Form>\r\n          </ModalBody>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { baseURL } from \"../baseURL\";\r\nimport {\r\n  Card,\r\n  Row,\r\n  Col,\r\n  CardImg,\r\n  CardBody,\r\n  Label,\r\n  Container,\r\n  NavLink,\r\n  NavItem,\r\n  Nav,\r\n  TabContent,\r\n  TabPane,\r\n  Table,\r\n} from \"reactstrap\";\r\nimport { SpedQuestionCreator } from \"./CreateSpedQuestion\";\r\nimport SpedResponse from \"./SpedResponses\";\r\nimport { SpedQuestionUpdater } from \"./UpdateSpedQuestion\";\r\nimport classnames from \"classnames\";\r\n\r\nexport default class Sped extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.toggle = this.toggle.bind(this);\r\n    this.state = {\r\n      activeTab: \"1\",\r\n    };\r\n    this.state = { students: [], student: null, id: null, spedQuestions: [] };\r\n  }\r\n\r\n  toggle(tab) {\r\n    if (this.state.activeTab !== tab) {\r\n      this.setState({\r\n        activeTab: tab,\r\n      });\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    // Fetch Student Table from API\r\n    fetch(`${baseURL}/students`)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        this.setState({\r\n          students: data,\r\n        });\r\n      });\r\n    fetch(`${baseURL}/spedQuestions`)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        this.setState({\r\n          spedQuestions: data,\r\n        });\r\n      });\r\n  }\r\n\r\n\r\n  onChange = (e) => {\r\n    const studentId = Number(e.target.value);\r\n    const student = this.state.students.find(\r\n      (student) => student.id === studentId\r\n    );\r\n    this.setState({ student });\r\n    console.log(this.state);\r\n    console.log(e.target.value);\r\n  };\r\n\r\n  render() {\r\n    const first = this.state.student?.firstName;\r\n    const last = this.state.student?.lastName;\r\n    return (\r\n      <Container>\r\n        <Nav tabs>\r\n          <NavItem>\r\n            <NavLink\r\n              className={classnames({ active: this.state.activeTab === \"1\" })}\r\n              onClick={() => {\r\n                this.toggle(\"1\");\r\n              }}\r\n            >\r\n              Raw Data\r\n            </NavLink>\r\n          </NavItem>\r\n          <NavItem>\r\n            <NavLink\r\n              className={classnames({ active: this.state.activeTab === \"2\" })}\r\n              onClick={() => {\r\n                this.toggle(\"2\");\r\n              }}\r\n            >\r\n              Questions List\r\n            </NavLink>\r\n          </NavItem>\r\n        </Nav>\r\n\r\n        <Row>\r\n          <Col>\r\n            <Label for=\"scheduleStudent\">Select Student</Label>\r\n            <select id=\"scheduleStudent\" onChange={this.onChange}>\r\n              <option selected>None</option>\r\n              {this.state.students.map((student) => (\r\n                <option key={student.id} value={student.id}>\r\n                  {student.firstName} {student.lastName}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </Col>\r\n        </Row>\r\n        <h1>\r\n          Student: {first} {last}\r\n        </h1>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-3\">\r\n            <Card body outline color=\"primary\">\r\n              {this.state.student && (\r\n                <CardImg\r\n                  src={`${this.state.student?.profile_image}`}\r\n                  alt={`${this.state.student?.firstName}`}\r\n                ></CardImg>\r\n              )}\r\n              {this.state.student && (\r\n                <CardBody>\r\n                  <p>\r\n                    <strong>Campus:</strong> {this.state.student.campuses.name}\r\n                  </p>\r\n                  <p>\r\n                    <strong>Grade:</strong> {this.state.student.grade}\r\n                  </p>\r\n                  <p>\r\n                    <strong>Additional Information:</strong>{\" \"}\r\n                    {this.state.student.additional_information}\r\n                  </p>\r\n                  <SpedQuestionCreator\r\n                    studentId={this.state.student?.id}\r\n                  ></SpedQuestionCreator>\r\n                </CardBody>\r\n              )}\r\n            </Card>\r\n          </div>\r\n          <div className=\"col-md-9\">\r\n            <TabContent activeTab={this.state.activeTab}>\r\n              <TabPane tabId=\"1\">\r\n                {this.state.student && (\r\n                  <SpedResponse student={this.state.student}></SpedResponse>\r\n                )}\r\n              </TabPane>\r\n              <TabPane tabId=\"2\">\r\n                <div class=\"tableFixHead\">\r\n                  <Table bordered hover size=\"sm\">\r\n                    <thead class=\"shadow\">\r\n                      <tr>\r\n                        <th>\r\n                          <h3>Date</h3>\r\n                        </th>\r\n                        <th>\r\n                          <h3>Question</h3>\r\n                        </th>\r\n                        <th>\r\n                          <h3>Category</h3>\r\n                        </th>\r\n                        <th>\r\n                          <h3>Options</h3>\r\n                        </th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {this.state.spedQuestions\r\n                        .filter(\r\n                          (studentQ) =>\r\n                            studentQ.student?.id === this.state.student?.id\r\n                        )\r\n                        .map((sped) => (\r\n                          <tr>\r\n                            <th key={sped.id}>{sped.date}</th>\r\n                            <td>\r\n                              <small>{sped.question}</small>\r\n                            </td>\r\n                            <td>\r\n                              <small>{sped.category}</small>\r\n                            </td>\r\n                            <td>\r\n                              <SpedQuestionUpdater\r\n                                date={sped.date}\r\n                                question={sped.question}\r\n                                category={sped.category}\r\n                                spedQuestionId={sped.id}\r\n                              ></SpedQuestionUpdater>\r\n                            </td>\r\n                          </tr>\r\n                        ))}\r\n                    </tbody>\r\n                  </Table>\r\n                </div>\r\n              </TabPane>\r\n            </TabContent>\r\n          </div>\r\n        </div>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport Student from './StudentComponent';\r\nimport Home from './HomeComponent';\r\nimport { Switch, Redirect } from 'react-router-dom'\r\nimport Teacher from './TeacherComponent';\r\nimport Schedule from './ScheduleComponent';\r\nimport { PrivateRoute } from './PrivateRoute';\r\nimport Sped from './SpedComponent';\r\n\r\n\r\nclass Main extends Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            students: [],\r\n            teachers:[],\r\n            campus: null\r\n            \r\n        };\r\n    }\r\n    componentDidMount() {\r\n        this.setState({campus:this.props.campus})\r\n        console.log(this.state.campus)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                \r\n                <Switch>\r\n                    <PrivateRoute path='/sped' campus={this.props?.campus} component={Sped} />\r\n                    <PrivateRoute path='/schedules' campus={this.props?.campus} component={Schedule} />\r\n                    <PrivateRoute path='/teachers' campus={this.props?.campus} component={Teacher} />\r\n                    <PrivateRoute path='/students' campus={this.props?.campus} component={Student} />\r\n                    <PrivateRoute path='/home' campus={this.props?.campus} component={Home} />\r\n                    <Redirect to='/home' />\r\n                </Switch>\r\n            </div>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nexport default Main;","import { useHistory } from 'react-router'\r\nimport { BrowserRouter } from 'react-router-dom'\r\nimport { useAuth } from '../contexts/Auth'\r\nimport Header from './HeaderComponent'\r\nimport Main from './MainComponent'\r\n\r\nexport function Dashboard() {\r\n  // Get current user and signOut function from context\r\n  const { user, signOut } = useAuth()\r\n\r\n  const history = useHistory()\r\n\r\n  async function handleSignOut() {\r\n    // Ends user session\r\n    await signOut()\r\n\r\n    // Redirects the user to Login page\r\n    history.push('/login')\r\n  }\r\n\r\n  const campus = Header.campus\r\n\r\n  return (\r\n    <div>\r\n      {/* Change it to display the user ID too 👇*/}\r\n      <p>Welcome, {user?.email}!</p>\r\n      <button onClick={handleSignOut}>Sign out</button>\r\n      <BrowserRouter>\r\n        <div className=\"App\">\r\n            <Header />\r\n            <Main\r\n              campus={campus}\r\n            />\r\n        </div>\r\n        </BrowserRouter>\r\n    </div>\r\n  )\r\n}\r\n","import React, { Component } from 'react';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport './App.css';\r\nimport { Signup } from './components/Signup';\r\nimport { Login } from './components/Login';\r\nimport { Dashboard } from './components/Dashboard';\r\nimport { AuthProvider } from './contexts/Auth';\r\nimport { PrivateRoute } from './components/PrivateRoute'\r\n\r\n\r\nclass App extends Component {\r\n    render() {\r\n        return (\r\n          <Router>\r\n            <AuthProvider>\r\n              <Switch>\r\n              <PrivateRoute exact path=\"/\" component={Dashboard} />\r\n                <Route path=\"/signup\" component={Signup} />\r\n                <Route path=\"/login\" component={Login} />\r\n              </Switch>\r\n            </AuthProvider>\r\n          </Router>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\nreportWebVitals();\r\n"],"sourceRoot":""}